{
	"id": "f0ada71df6076fc59aa26755b497b2e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking_dApp/StakeBoredom.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n/** NatSpec\r\n/// @title STAKE BOREDOM: AN ERC20 STAKING CONTRACT //////////////////\r\n/// @notice BoredPepe token holders stake BoredPepe to earn HappyPepe as rewards\r\n/// @notice Staking and Reward Tokens are deployed on Polygon Mumbai testnet\r\n/// @dev Tokens must be approved before thy can be staked\r\n/// KING(OBA) CA: 0xafAa57C68aD8ecB79E7F792f2B5683817B42467D\r\n/// HappyPepe CA: 0x1C2aB209995C1E2b45F67F85611bFeB2C6590538\r\n*/\r\n\r\n\r\npragma solidity 0.8.15;\r\n\r\nimport \"./ReentrancyGuard.sol\";\r\nimport \"./SafeERC20.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./PoolManager.sol\";\r\n\r\ncontract StakeBoredom is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    using PoolManager for PoolManager.PoolState;\r\n\r\n    PoolManager.PoolState private _state;\r\n\r\n    uint256 private _totalStake;\r\n    mapping (address => uint256) private _userRewardPerTokenPaid;\r\n    mapping (address => uint256) private _rewards;\r\n    mapping (address => uint256) private _balances;\r\n\r\n    IERC20 public immutable stakingToken;\r\n    IERC20 public immutable rewardToken;\r\n\r\n    constructor(address distributor, IERC20 stakingToken_, IERC20 rewardToken_, uint64 duration) {\r\n        stakingToken = stakingToken_;\r\n        rewardToken = rewardToken_;\r\n        _state.rewardsDuration = duration * 1 days;\r\n        _state.distributor = uint160(distributor);\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    function totalAmountStaked() external view returns (uint256)\r\n    {\r\n        return _totalStake;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getOwner() external view returns (address)\r\n    {\r\n        return address(_state.distributor);\r\n    }\r\n\r\n    function lastTimeRewardApplicable() external view returns (uint256)\r\n    {\r\n        return _state.lastTimeRewardApplicable();\r\n    }\r\n\r\n    function rewardPerToken() external view returns (uint256)\r\n    {\r\n        return _state.rewardPerToken(_totalStake);\r\n    }\r\n\r\n    function getRewardForDuration() external view returns (uint256)\r\n    {\r\n        return _state.getRewardForDuration();\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256)\r\n    {\r\n        return _balances[account] * (\r\n            _state.rewardPerToken(_totalStake) - _userRewardPerTokenPaid[account]\r\n        ) / 1e18 + _rewards[account];\r\n    }\r\n\r\n    /* ========== MUTATIONS ========== */\r\n\r\n    function stake(uint256 amount) external payable nonReentrant updateReward(msg.sender)\r\n    {\r\n        require(amount > 0, \"Must be greater than zero\");\r\n\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        _totalStake += amount;\r\n        _balances[msg.sender] += amount;\r\n\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public payable nonReentrant updateReward(msg.sender)\r\n    {\r\n        require(amount > 0, \"Must be greater than zero\");\r\n\r\n        _totalStake -= amount;\r\n        _balances[msg.sender] -= amount;\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function getReward() public payable nonReentrant updateReward(msg.sender)\r\n    {\r\n        uint256 reward = _rewards[msg.sender];\r\n\r\n        if (reward > 0) {\r\n            _rewards[msg.sender] = 0;\r\n            rewardToken.safeTransfer(msg.sender, reward);\r\n\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external payable\r\n    {\r\n        _state.updateReward(_totalStake);\r\n\r\n        uint256 balance = _balances[msg.sender];\r\n        uint256 reward = earned(msg.sender);\r\n\r\n        _userRewardPerTokenPaid[msg.sender] = _state.rewardPerTokenStored;\r\n        _balances[msg.sender] -= balance;\r\n        _rewards[msg.sender] = 0;\r\n        _totalStake -= balance;\r\n\r\n        _state.updateReward(_totalStake);\r\n\r\n        if (stakingToken == rewardToken) {\r\n            stakingToken.safeTransfer(msg.sender, balance + reward);\r\n        } else {\r\n            stakingToken.safeTransfer(msg.sender, balance);\r\n            rewardToken.safeTransfer(msg.sender, reward);\r\n        }\r\n\r\n        emit Withdrawn(msg.sender, balance);\r\n        emit RewardPaid(msg.sender, reward);\r\n    }\r\n\r\n    /* ========== PROTECTED ========== */\r\n    function setDistributor(address newDistributor) external payable onlyDistributor\r\n    {\r\n        require(newDistributor != address(0), \"Cannot set to zero addr\");\r\n        _state.distributor = uint160(newDistributor);\r\n    }\r\n\r\n    function depositRewardTokens(uint256 amount) external payable onlyDistributor\r\n    {\r\n        require(amount > 0, \"Must be greater than zero\");\r\n\r\n        rewardToken.safeTransferFrom(msg.sender, address(this), amount);\r\n\r\n        notifyRewardAmount(amount);\r\n    }\r\n\r\n    function notifyRewardAmount(uint256 reward) public payable updateReward(address(0)) onlyDistributor\r\n    {\r\n        uint256 duration = _state.rewardsDuration;\r\n\r\n        if (block.timestamp >= _state.periodFinish) {\r\n            _state.rewardRate = reward / duration;\r\n        } else {\r\n            uint256 remaining = _state.periodFinish - block.timestamp;\r\n            uint256 leftover = remaining * _state.rewardRate;\r\n            _state.rewardRate = (reward + leftover) / duration;\r\n        }\r\n\r\n        uint256 balance = rewardToken.balanceOf(address(this));\r\n\r\n        if (rewardToken == stakingToken) {\r\n            balance -= _totalStake;\r\n        }\r\n\r\n        require(_state.rewardRate <= balance / duration, \"Reward too high\");\r\n\r\n        _state.lastUpdateTime = uint64(block.timestamp);\r\n        _state.periodFinish = uint64(block.timestamp + duration);\r\n\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier updateReward(address account) {\r\n        _state.updateReward(_totalStake);\r\n\r\n        if (account != address(0)) {\r\n            _rewards[account] = earned(account);\r\n            _userRewardPerTokenPaid[account] = _state.rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    // modifier nonReentrant() {\r\n    //     require(_state.mutex == 1, \"Nonreentrant\");\r\n    //     _state.mutex = 2;\r\n    //     _;\r\n    //     _state.mutex = 1;\r\n    // }\r\n\r\n    modifier onlyDistributor() {\r\n        require(msg.sender == address(_state.distributor), \"Not distributor\");\r\n        _;\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n    event DistributorUpdated(address indexed newDistributor);\r\n}"
			},
			"contracts/Staking_dApp/PoolManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Math.sol\";\r\n\r\nlibrary PoolManager {\r\n\r\n    struct PoolState {\r\n        // uint8 mutex;\r\n        uint64 periodFinish;\r\n        uint64 rewardsDuration;\r\n        uint64 lastUpdateTime;\r\n        uint160 distributor;\r\n        uint256 rewardRate;\r\n        uint256 rewardPerTokenStored;\r\n    }\r\n\r\n    function lastTimeRewardApplicable(PoolState storage state) internal view returns (uint256)\r\n    {\r\n        return Math.min(block.timestamp, state.periodFinish);\r\n    }\r\n\r\n    function rewardPerToken(PoolState storage state, uint256 totalSupply) internal view returns (uint256)\r\n    {\r\n        if (totalSupply == 0) return state.rewardPerTokenStored;\r\n\r\n        return state.rewardPerTokenStored + (\r\n            (Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime) * state.rewardRate * 1e18 / totalSupply\r\n        );\r\n    }\r\n\r\n    function getRewardForDuration(PoolState storage state) internal view returns (uint256)\r\n    {\r\n        return state.rewardRate * state.rewardsDuration;\r\n    }\r\n\r\n    function updateReward(PoolState storage state, uint256 supply) internal\r\n    {\r\n        state.rewardPerTokenStored = rewardPerToken(state, supply);\r\n        state.lastUpdateTime = uint64(lastTimeRewardApplicable(state));\r\n    }\r\n}"
			},
			"contracts/Staking_dApp/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of decimals in the token\r\n     */\r\n    function decimals() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/Staking_dApp/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"contracts/Staking_dApp/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\r\n     * `nonReentrant` function in the call stack.\r\n     */\r\n    function _reentrancyGuardEntered() internal view returns (bool) {\r\n        return _status == _ENTERED;\r\n    }\r\n}"
			},
			"contracts/Staking_dApp/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/Staking_dApp/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a / b + (a % b == 0 ? 0 : 1);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Staking_dApp/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking_dApp/Address.sol\":187:8461  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking_dApp/Address.sol\":187:8461  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208971e75e5f06738c0bf973b715daebabd486976735245a44b7bf6382d3337b1464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208971e75e5f06738c0bf973b715daebabd486976735245a44b7bf6382d3337b1464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH18 0xE75E5F06738C0BF973B715DAEBABD4869767 CALLDATALOAD 0x24 GAS DIFFICULTY 0xB7 0xBF PUSH4 0x82D3337B EQ PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "187:8274:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:8274:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208971e75e5f06738c0bf973b715daebabd486976735245a44b7bf6382d3337b1464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH18 0xE75E5F06738C0BF973B715DAEBABD4869767 CALLDATALOAD 0x24 GAS DIFFICULTY 0xB7 0xBF PUSH4 0x82D3337B EQ PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "187:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 8461,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208971e75e5f06738c0bf973b715daebabd486976735245a44b7bf6382d3337b1464736f6c634300080f0033",
									".code": [
										{
											"begin": 187,
											"end": 8461,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 8461,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Staking_dApp/Address.sol",
								"contracts/Staking_dApp/IERC20.sol",
								"contracts/Staking_dApp/Math.sol",
								"contracts/Staking_dApp/PoolManager.sol",
								"contracts/Staking_dApp/ReentrancyGuard.sol",
								"contracts/Staking_dApp/SafeERC20.sol",
								"contracts/Staking_dApp/StakeBoredom.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/Address.sol\":{\"keccak256\":\"0xe57c68ef15a800ed8276055bfa234fb62c4939afee71e63baa35f19b2586edfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e988cf63a930e07ad1b55c109347b588dfbd28bd79f23e8f7162901d8f276b5\",\"dweb:/ipfs/QmZd4D7me8qDHWXhm4NKYFjzQ4bGcC8b4WhPr9B4Rsv6jv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the amount of decimals in the token"
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the amount of decimals in the token\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/IERC20.sol\":{\"keccak256\":\"0xfeb956216c4aad982187d5f3800c72934e5f5d9d3b6d4d09a583e9a60bc02b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0101a3437b16cf61c1ace759d837968daa5b9b8bb4a089ab0bd83c878a5da08\",\"dweb:/ipfs/QmWvQnZjh7ZChr3F5LS9DAwbjE6djg4uD8gJTnHbVPP2qH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking_dApp/Math.sol\":195:1253  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking_dApp/Math.sol\":195:1253  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc040ffcd62cbd30ca9aadaeb4efe277aa77522b63cf2e9a2a113e64f94e74fa64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc040ffcd62cbd30ca9aadaeb4efe277aa77522b63cf2e9a2a113e64f94e74fa64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xF 0xFC 0xD6 0x2C 0xBD ADDRESS 0xCA SWAP11 0xAD 0xAE 0xB4 0xEF 0xE2 PUSH24 0xAA77522B63CF2E9A2A113E64F94E74FA64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "195:1058:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:1058:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc040ffcd62cbd30ca9aadaeb4efe277aa77522b63cf2e9a2a113e64f94e74fa64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xF 0xFC 0xD6 0x2C 0xBD ADDRESS 0xCA SWAP11 0xAD 0xAE 0xB4 0xEF 0xE2 PUSH24 0xAA77522B63CF2E9A2A113E64F94E74FA64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "195:1058:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 195,
									"end": 1253,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc040ffcd62cbd30ca9aadaeb4efe277aa77522b63cf2e9a2a113e64f94e74fa64736f6c634300080f0033",
									".code": [
										{
											"begin": 195,
											"end": 1253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 1253,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Staking_dApp/Address.sol",
								"contracts/Staking_dApp/IERC20.sol",
								"contracts/Staking_dApp/Math.sol",
								"contracts/Staking_dApp/PoolManager.sol",
								"contracts/Staking_dApp/ReentrancyGuard.sol",
								"contracts/Staking_dApp/SafeERC20.sol",
								"contracts/Staking_dApp/StakeBoredom.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/Math.sol\":{\"keccak256\":\"0x03a29ae9391115dfb7f77574ebae7cc465c18df15f6932339240f4c533bdac2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65f7b09ab3f25fa768acce4f3c7da29cf93a3960e11f90fd0e11c82bc98b22d7\",\"dweb:/ipfs/QmUG8ixyW42gk53tSMnzgH1NkoUJLR263R8v3ecLKwHhMx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/PoolManager.sol": {
				"PoolManager": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking_dApp/PoolManager.sol\":86:1311  library PoolManager {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking_dApp/PoolManager.sol\":86:1311  library PoolManager {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201299a7961d430cee2c6da3ae701eafd22b5f6adf8854955724bda0209b43219064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201299a7961d430cee2c6da3ae701eafd22b5f6adf8854955724bda0209b43219064736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP10 0xA7 SWAP7 SAR NUMBER 0xC 0xEE 0x2C PUSH14 0xA3AE701EAFD22B5F6ADF88549557 0x24 0xBD LOG0 KECCAK256 SWAP12 NUMBER 0x21 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "86:1225:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;86:1225:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201299a7961d430cee2c6da3ae701eafd22b5f6adf8854955724bda0209b43219064736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP10 0xA7 SWAP7 SAR NUMBER 0xC 0xEE 0x2C PUSH14 0xA3AE701EAFD22B5F6ADF88549557 0x24 0xBD LOG0 KECCAK256 SWAP12 NUMBER 0x21 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "86:1225:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getRewardForDuration(struct PoolManager.PoolState storage pointer)": "infinite",
								"lastTimeRewardApplicable(struct PoolManager.PoolState storage pointer)": "infinite",
								"rewardPerToken(struct PoolManager.PoolState storage pointer,uint256)": "infinite",
								"updateReward(struct PoolManager.PoolState storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 86,
									"end": 1311,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201299a7961d430cee2c6da3ae701eafd22b5f6adf8854955724bda0209b43219064736f6c634300080f0033",
									".code": [
										{
											"begin": 86,
											"end": 1311,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 86,
											"end": 1311,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Staking_dApp/Address.sol",
								"contracts/Staking_dApp/IERC20.sol",
								"contracts/Staking_dApp/Math.sol",
								"contracts/Staking_dApp/PoolManager.sol",
								"contracts/Staking_dApp/ReentrancyGuard.sol",
								"contracts/Staking_dApp/SafeERC20.sol",
								"contracts/Staking_dApp/StakeBoredom.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/Math.sol\":{\"keccak256\":\"0x03a29ae9391115dfb7f77574ebae7cc465c18df15f6932339240f4c533bdac2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65f7b09ab3f25fa768acce4f3c7da29cf93a3960e11f90fd0e11c82bc98b22d7\",\"dweb:/ipfs/QmUG8ixyW42gk53tSMnzgH1NkoUJLR263R8v3ecLKwHhMx\"]},\"contracts/Staking_dApp/PoolManager.sol\":{\"keccak256\":\"0xb1fe3f9acc8634e53b1fcdd6cf5b713ac4d1ad71b07540fc3a19a654e768ced5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33c75180760c863bffe0967f9cfe58cff49cbba83c32f08431f4e288b3ace91c\",\"dweb:/ipfs/QmZoaQnhpsQB765dHvJkqNMoukjzr8h7NbMtAT76i9sRiX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/ReentrancyGuard.sol\":{\"keccak256\":\"0xcc31a6aaa033d766177292c4a614746a52ad143a8c2f5793d6617c4ea49a8764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c65d38db424fd569f7546cfc91bb2492adda8562eb76babedf557979fb4c86e\",\"dweb:/ipfs/QmVvFH7yNSR7XL2BhoUTBJXXwtLCasDWehMcVSSoBYo2AB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 596,
								"contract": "contracts/Staking_dApp/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking_dApp/SafeERC20.sol\":648:3999  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":648:3999  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b65e843dd1215c2672921f4df9896d4a01dd7aba5cc211fcae71dc0801dc532764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65e843dd1215c2672921f4df9896d4a01dd7aba5cc211fcae71dc0801dc532764736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x5E DUP5 RETURNDATASIZE 0xD1 0x21 0x5C 0x26 PUSH19 0x921F4DF9896D4A01DD7ABA5CC211FCAE71DC08 ADD 0xDC MSTORE8 0x27 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "648:3351:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;648:3351:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65e843dd1215c2672921f4df9896d4a01dd7aba5cc211fcae71dc0801dc532764736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x5E DUP5 RETURNDATASIZE 0xD1 0x21 0x5C 0x26 PUSH19 0x921F4DF9896D4A01DD7ABA5CC211FCAE71DC08 ADD 0xDC MSTORE8 0x27 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "648:3351:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b65e843dd1215c2672921f4df9896d4a01dd7aba5cc211fcae71dc0801dc532764736f6c634300080f0033",
									".code": [
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/Staking_dApp/Address.sol",
								"contracts/Staking_dApp/IERC20.sol",
								"contracts/Staking_dApp/Math.sol",
								"contracts/Staking_dApp/PoolManager.sol",
								"contracts/Staking_dApp/ReentrancyGuard.sol",
								"contracts/Staking_dApp/SafeERC20.sol",
								"contracts/Staking_dApp/StakeBoredom.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/Address.sol\":{\"keccak256\":\"0xe57c68ef15a800ed8276055bfa234fb62c4939afee71e63baa35f19b2586edfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e988cf63a930e07ad1b55c109347b588dfbd28bd79f23e8f7162901d8f276b5\",\"dweb:/ipfs/QmZd4D7me8qDHWXhm4NKYFjzQ4bGcC8b4WhPr9B4Rsv6jv\"]},\"contracts/Staking_dApp/IERC20.sol\":{\"keccak256\":\"0xfeb956216c4aad982187d5f3800c72934e5f5d9d3b6d4d09a583e9a60bc02b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0101a3437b16cf61c1ace759d837968daa5b9b8bb4a089ab0bd83c878a5da08\",\"dweb:/ipfs/QmWvQnZjh7ZChr3F5LS9DAwbjE6djg4uD8gJTnHbVPP2qH\"]},\"contracts/Staking_dApp/SafeERC20.sol\":{\"keccak256\":\"0xe7ea939e4d2b9be8696581da4bcf557355c3fea84b5edead12b1fee47c4db27b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab1b97703352f65844ee143648270abb4f37171b22cf2725af4d12464772ce5c\",\"dweb:/ipfs/QmT2n5kDg4Zfuvawq4C4huibrD9eRPzx7DmnnbccNGaJcG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking_dApp/StakeBoredom.sol": {
				"StakeBoredom": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "distributor",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "stakingToken_",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "rewardToken_",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "duration",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newDistributor",
									"type": "address"
								}
							],
							"name": "DistributorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositRewardTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDistributor",
									"type": "address"
								}
							],
							"name": "setDistributor",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmountStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking_dApp/StakeBoredom.sol\":613:6721  contract StakeBoredom is ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1086:1368  constructor(address distributor, IERC20 stakingToken_, IERC20 rewardToken_, uint64 duration) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1749:1750  1 */\n  0x01\n    /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1860:1867  _status */\n  0x00\n    /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1860:1882  _status = _NOT_ENTERED */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1190:1218  stakingToken = stakingToken_ */\n  dup1\n  dup5\n  and\n  0x80\n  mstore\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1229:1255  rewardToken = rewardToken_ */\n  dup3\n  and\n  0xa0\n  mstore\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1291:1308  duration * 1 days */\n  tag_8\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1291:1299  duration */\n  dup2\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1302:1308  1 days */\n  0x015180\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1291:1308  duration * 1 days */\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1266:1272  _state */\n  0x01\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1266:1308  _state.rewardsDuration = duration * 1 days */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  0x010000000000000000\n  mul\n  not(sub(shl(0x80, 0x01), shl(0x40, 0x01)))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1319:1337  _state.distributor */\n  0x02\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":1319:1360  _state.distributor = uint160(distributor) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap4\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":613:6721  contract StakeBoredom is ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:145   */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_14\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_14:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:871   */\ntag_3:\n    /* \"#utility.yul\":274:280   */\n  0x00\n    /* \"#utility.yul\":282:288   */\n  dup1\n    /* \"#utility.yul\":290:296   */\n  0x00\n    /* \"#utility.yul\":298:304   */\n  dup1\n    /* \"#utility.yul\":351:354   */\n  0x80\n    /* \"#utility.yul\":339:348   */\n  dup6\n    /* \"#utility.yul\":330:337   */\n  dup8\n    /* \"#utility.yul\":326:349   */\n  sub\n    /* \"#utility.yul\":322:355   */\n  slt\n    /* \"#utility.yul\":319:372   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":365:366   */\n  dup1\n    /* \"#utility.yul\":358:370   */\n  revert\n    /* \"#utility.yul\":319:372   */\ntag_16:\n    /* \"#utility.yul\":400:409   */\n  dup5\n    /* \"#utility.yul\":394:410   */\n  mload\n    /* \"#utility.yul\":419:450   */\n  tag_17\n    /* \"#utility.yul\":444:449   */\n  dup2\n    /* \"#utility.yul\":419:450   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":519:521   */\n  0x20\n    /* \"#utility.yul\":504:522   */\n  dup7\n  add\n    /* \"#utility.yul\":498:523   */\n  mload\n    /* \"#utility.yul\":469:474   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":532:565   */\n  tag_18\n    /* \"#utility.yul\":498:523   */\n  dup2\n    /* \"#utility.yul\":532:565   */\n  tag_11\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":636:638   */\n  0x40\n    /* \"#utility.yul\":621:639   */\n  dup7\n  add\n    /* \"#utility.yul\":615:640   */\n  mload\n    /* \"#utility.yul\":584:591   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_19\n    /* \"#utility.yul\":615:640   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":753:755   */\n  0x60\n    /* \"#utility.yul\":738:756   */\n  dup7\n  add\n    /* \"#utility.yul\":732:757   */\n  mload\n    /* \"#utility.yul\":701:708   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":788:820   */\n  dup2\n  and\n    /* \"#utility.yul\":776:821   */\n  dup2\n  eq\n    /* \"#utility.yul\":766:839   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":835:836   */\n  0x00\n    /* \"#utility.yul\":832:833   */\n  dup1\n    /* \"#utility.yul\":825:837   */\n  revert\n    /* \"#utility.yul\":766:839   */\ntag_20:\n    /* \"#utility.yul\":150:871   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":876:1243   */\ntag_9:\n    /* \"#utility.yul\":915:922   */\n  0x00\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":985:995   */\n  dup3\n  dup2\n  and\n    /* \"#utility.yul\":1015:1025   */\n  dup5\n  dup3\n  and\n    /* \"#utility.yul\":1048:1059   */\n  dup2\n  iszero\n    /* \"#utility.yul\":1041:1060   */\n  iszero\n    /* \"#utility.yul\":1070:1082   */\n  dup3\n  dup5\n  div\n    /* \"#utility.yul\":1062:1083   */\n  dup3\n  gt\n    /* \"#utility.yul\":1037:1084   */\n  and\n    /* \"#utility.yul\":1034:1204   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":1126:1136   */\n  0x4e487b71\n    /* \"#utility.yul\":1121:1124   */\n  0xe0\n    /* \"#utility.yul\":1117:1137   */\n  shl\n    /* \"#utility.yul\":1114:1115   */\n  0x00\n    /* \"#utility.yul\":1107:1138   */\n  mstore\n    /* \"#utility.yul\":1161:1165   */\n  0x11\n    /* \"#utility.yul\":1158:1159   */\n  0x04\n    /* \"#utility.yul\":1151:1166   */\n  mstore\n    /* \"#utility.yul\":1189:1193   */\n  0x24\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1179:1194   */\n  revert\n    /* \"#utility.yul\":1034:1204   */\ntag_22:\n    /* \"#utility.yul\":1224:1237   */\n  mul\n  swap5\n    /* \"#utility.yul\":876:1243   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n    /* \"contracts/Staking_dApp/StakeBoredom.sol\":613:6721  contract StakeBoredom is ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n  0x00\n  assignImmutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":613:6721  contract StakeBoredom is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75619ab5\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcd3daf9d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfe961f61\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x75619ab5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x3c6b16ab\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8cc262\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x16c621e0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2174:2411  function earned(address account) public view returns (uint256)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2174:2411  function earned(address account) public view returns (uint256)... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4567:4832  function depositRewardTokens(uint256 amount) external payable onlyDistributor... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2042:2166  function getRewardForDuration() external view returns (uint256)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_22\n      tag_34\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2825:3163  function withdraw(uint256 amount) public payable nonReentrant updateReward(msg.sender)... */\n    tag_5:\n      tag_28\n      tag_37\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4840:5748  function notifyRewardAmount(uint256 reward) public payable updateReward(address(0)) onlyDistributor... */\n    tag_6:\n      tag_28\n      tag_40\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3171:3496  function getReward() public payable nonReentrant updateReward(msg.sender)... */\n    tag_7:\n      tag_28\n      tag_43\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1528:1645  function balanceOf(address account) external view returns (uint256)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_22\n      tag_46\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1619:1637  _balances[account] */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1587:1594  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1619:1637  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1619:1628  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1619:1637  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1528:1645  function balanceOf(address account) external view returns (uint256)... */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":999:1035  IERC20 public immutable stakingToken */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":850:882   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":832:883   */\n      dup2\n      mstore\n        /* \"#utility.yul\":820:822   */\n      0x20\n        /* \"#utility.yul\":805:823   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":999:1035  IERC20 public immutable stakingToken */\n      tag_26\n        /* \"#utility.yul\":672:889   */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4335:4559  function setDistributor(address newDistributor) external payable onlyDistributor... */\n    tag_10:\n      tag_28\n      tag_55\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1771:1903  function lastTimeRewardApplicable() external view returns (uint256)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_22\n      tag_59\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1653:1763  function getOwner() external view returns (address)... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1736:1754  _state.distributor */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1653:1763  function getOwner() external view returns (address)... */\n      jump(tag_50)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2464:2817  function stake(uint256 amount) external payable nonReentrant updateReward(msg.sender)... */\n    tag_13:\n      tag_28\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1911:2034  function rewardPerToken() external view returns (uint256)... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_22\n      tag_71\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3504:4284  function exit() external payable... */\n    tag_15:\n      tag_28\n      tag_74\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1042:1077  IERC20 public immutable rewardToken */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_50\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      dup2\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1417:1520  function totalAmountStaked() external view returns (uint256)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1501:1512  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1417:1520  function totalAmountStaked() external view returns (uint256)... */\n      jump(tag_22)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2174:2411  function earned(address account) public view returns (uint256)... */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2386:2403  _rewards[account] */\n      dup2\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2228:2235  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2386:2403  _rewards[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2386:2394  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2386:2403  _rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2333:2356  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2333:2365  _userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2318:2329  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2379:2383  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2333:2365  _userRewardPerTokenPaid[account] */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2296:2330  _state.rewardPerToken(_totalStake) */\n      tag_84\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2296:2302  _state */\n      0x01\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2296:2317  _state.rewardPerToken */\n      tag_85\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2296:2330  _state.rewardPerToken(_totalStake) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2296:2365  _state.rewardPerToken(_totalStake) - _userRewardPerTokenPaid[account] */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2278  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2269  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2278  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2376  _balances[account] * (... */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2383  _balances[account] * (... */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2260:2403  _balances[account] * (... */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2253:2403  return _balances[account] * (... */\n      swap3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2174:2411  function earned(address account) public view returns (uint256)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4567:4832  function depositRewardTokens(uint256 amount) external payable onlyDistributor... */\n    tag_31:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6334:6352  _state.distributor */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6322  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6353  msg.sender == address(_state.distributor) */\n      eq\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6304:6373  require(msg.sender == address(_state.distributor), \"Not distributor\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4678:4679  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4669:4675  amount */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4669:4679  amount > 0 */\n      gt\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4661:4709  require(amount > 0, \"Must be greater than zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_101\n      jump\t// in\n    tag_99:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4722:4785  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_102\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4722:4733  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4722:4750  rewardToken.safeTransferFrom */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4751:4761  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4771:4775  this */\n      address\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4778:4784  amount */\n      dup5\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4722:4750  rewardToken.safeTransferFrom */\n      tag_103\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4722:4785  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4798:4824  notifyRewardAmount(amount) */\n      tag_104\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4817:4823  amount */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4798:4816  notifyRewardAmount */\n      tag_41\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4798:4824  notifyRewardAmount(amount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4567:4832  function depositRewardTokens(uint256 amount) external payable onlyDistributor... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2042:2166  function getRewardForDuration() external view returns (uint256)... */\n    tag_34:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2097:2104  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2129:2158  _state.getRewardForDuration() */\n      tag_106\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2129:2135  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2129:2156  _state.getRewardForDuration */\n      tag_107\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2129:2158  _state.getRewardForDuration() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2122:2158  return _state.getRewardForDuration() */\n      swap1\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2042:2166  function getRewardForDuration() external view returns (uint256)... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2825:3163  function withdraw(uint256 amount) public payable nonReentrant updateReward(msg.sender)... */\n    tag_38:\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      tag_109\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2330  _nonReentrantBefore */\n      tag_110\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2900:2910  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      tag_112\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5871:5882  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5857  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5870  _state.updateReward */\n      tag_113\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5900:5921  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n      tag_114\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      tag_115\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5965:5972  account */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5964  earned */\n      tag_25\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5946  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5973  _rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6023:6050  _state.rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6011  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6020  _userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6050  _userRewardPerTokenPaid[account] = _state.rewardPerTokenStored */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n    tag_114:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2945:2946  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2936:2942  amount */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2936:2946  amount > 0 */\n      gt\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2928:2976  require(amount > 0, \"Must be greater than zero\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_101\n      jump\t// in\n    tag_117:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3004:3010  amount */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2989:3000  _totalStake */\n      0x05\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2989:3010  _totalStake -= amount */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_119:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3031:3041  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3042  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3030  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3042  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3052  _balances[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3046:3052  amount */\n      dup5\n      swap3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3042  _balances[msg.sender] */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3052  _balances[msg.sender] -= amount */\n      tag_120\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3046:3052  amount */\n      dup5\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3021:3052  _balances[msg.sender] -= amount */\n      tag_87\n      jump\t// in\n    tag_120:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3063:3108  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_121\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3063:3075  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3063:3088  stakingToken.safeTransfer */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3089:3099  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3101:3107  amount */\n      dup5\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3063:3088  stakingToken.safeTransfer */\n      tag_122\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3063:3108  stakingToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3126:3155  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3136:3146  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3126:3155  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3126:3155  Withdrawn(msg.sender, amount) */\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2343:2344  _ */\n      pop\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2355:2375  _nonReentrantAfter() */\n      tag_104\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1749:1750  1 */\n      0x01\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2875:2882  _status */\n      0x00\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2875:2897  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2692:2905  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4840:5748  function notifyRewardAmount(uint256 reward) public payable updateReward(address(0)) onlyDistributor... */\n    tag_41:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4920:4921  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      tag_127\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5871:5882  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5857  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5870  _state.updateReward */\n      tag_113\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5900:5921  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n      tag_128\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      tag_129\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5965:5972  account */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5964  earned */\n      tag_25\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      jump\t// in\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5946  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5973  _rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6023:6050  _state.rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6011  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6020  _userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6050  _userRewardPerTokenPaid[account] = _state.rewardPerTokenStored */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n    tag_128:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6334:6352  _state.distributor */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6322  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6353  msg.sender == address(_state.distributor) */\n      eq\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6304:6373  require(msg.sender == address(_state.distributor), \"Not distributor\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4975:4981  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4975:4997  _state.rewardsDuration */\n      sload\n      0xffffffffffffffff\n      shl(0x40, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5033:5052  _state.periodFinish */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5014:5029  block.timestamp */\n      timestamp\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5014:5052  block.timestamp >= _state.periodFinish */\n      lt\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5010:5336  if (block.timestamp >= _state.periodFinish) {... */\n      tag_134\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5089:5106  reward / duration */\n      tag_135\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5098:5106  duration */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5089:5095  reward */\n      dup5\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5089:5106  reward / duration */\n      tag_91\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5069:5086  _state.rewardRate */\n      0x03\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5069:5106  _state.rewardRate = reward / duration */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5010:5336  if (block.timestamp >= _state.periodFinish) {... */\n      jump(tag_136)\n    tag_134:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5159:5165  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5159:5178  _state.periodFinish */\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5139:5156  uint256 remaining */\n      0x00\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5159:5196  _state.periodFinish - block.timestamp */\n      tag_137\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5181:5196  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5159:5178  _state.periodFinish */\n      0xffffffffffffffff\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5159:5196  _state.periodFinish - block.timestamp */\n      tag_87\n      jump\t// in\n    tag_137:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5242:5259  _state.rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5139:5196  uint256 remaining = _state.periodFinish - block.timestamp */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5211:5227  uint256 leftover */\n      0x00\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5230:5259  remaining * _state.rewardRate */\n      tag_138\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5139:5196  uint256 remaining = _state.periodFinish - block.timestamp */\n      dup4\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5230:5259  remaining * _state.rewardRate */\n      tag_89\n      jump\t// in\n    tag_138:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5211:5259  uint256 leftover = remaining * _state.rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5316:5324  duration */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5295:5312  reward + leftover */\n      tag_139\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5211:5259  uint256 leftover = remaining * _state.rewardRate */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5295:5301  reward */\n      dup8\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5295:5312  reward + leftover */\n      tag_93\n      jump\t// in\n    tag_139:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5294:5324  (reward + leftover) / duration */\n      tag_140\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_140:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5274:5291  _state.rewardRate */\n      0x03\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5274:5324  _state.rewardRate = (reward + leftover) / duration */\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5010:5336  if (block.timestamp >= _state.periodFinish) {... */\n    tag_136:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5366:5402  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5396:5400  this */\n      address\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5366:5402  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":832:883   */\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5348:5363  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5366:5377  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5366:5387  rewardToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":805:823   */\n      0x24\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5366:5402  rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5348:5402  uint256 balance = rewardToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5434:5446  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5419:5446  rewardToken == stakingToken */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5419:5430  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5419:5446  rewardToken == stakingToken */\n      and\n      sub\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5415:5497  if (rewardToken == stakingToken) {... */\n      tag_146\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5474:5485  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5463:5485  balance -= _totalStake */\n      tag_147\n      swap1\n      dup3\n      tag_87\n      jump\t// in\n    tag_147:\n      swap1\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5415:5497  if (rewardToken == stakingToken) {... */\n    tag_146:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5538:5556  balance / duration */\n      tag_148\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5548:5556  duration */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5538:5545  balance */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5538:5556  balance / duration */\n      tag_91\n      jump\t// in\n    tag_148:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5517:5534  _state.rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5517:5556  _state.rewardRate <= balance / duration */\n      gt\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5509:5576  require(_state.rewardRate <= balance / duration, \"Reward too high\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2981:2983   */\n      0x20\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5509:5576  require(_state.rewardRate <= balance / duration, \"Reward too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2963:2984   */\n      mstore\n        /* \"#utility.yul\":3020:3022   */\n      0x0f\n        /* \"#utility.yul\":3000:3018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2993:3023   */\n      mstore\n      shl(0x8b, 0x0a4caeec2e4c840e8dede40d0d2ced)\n        /* \"#utility.yul\":3039:3057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3032:3077   */\n      mstore\n        /* \"#utility.yul\":3094:3112   */\n      0x64\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5509:5576  require(_state.rewardRate <= balance / duration, \"Reward too high\") */\n      tag_96\n        /* \"#utility.yul\":2779:3118   */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5509:5576  require(_state.rewardRate <= balance / duration, \"Reward too high\") */\n    tag_149:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5589:5595  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5589:5636  _state.lastUpdateTime = uint64(block.timestamp) */\n      dup1\n      sload\n      0xffffffffffffffff\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5620:5635  block.timestamp */\n      timestamp\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5589:5636  _state.lastUpdateTime = uint64(block.timestamp) */\n      swap1\n      dup2\n      and\n      shl(0x80, 0x01)\n      mul\n      not(shl(0x80, 0xffffffffffffffff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5676:5702  block.timestamp + duration */\n      tag_152\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5694:5702  duration */\n      dup4\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5676:5702  block.timestamp + duration */\n      tag_93\n      jump\t// in\n    tag_152:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5647:5653  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5647:5703  _state.periodFinish = uint64(block.timestamp + duration) */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      0xffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5721:5740  RewardAdded(reward) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5721:5740  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5721:5740  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4945:5748  {... */\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4840:5748  function notifyRewardAmount(uint256 reward) public payable updateReward(address(0)) onlyDistributor... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3171:3496  function getReward() public payable nonReentrant updateReward(msg.sender)... */\n    tag_43:\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      tag_155\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2330  _nonReentrantBefore */\n      tag_110\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3233:3243  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      tag_157\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5871:5882  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5857  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5870  _state.updateReward */\n      tag_113\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5900:5921  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n      tag_158\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      tag_159\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5965:5972  account */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5964  earned */\n      tag_25\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5946  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5973  _rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6023:6050  _state.rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6011  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6020  _userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6050  _userRewardPerTokenPaid[account] = _state.rewardPerTokenStored */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n    tag_158:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3287:3297  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3261:3275  uint256 reward */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3278:3298  _rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3278:3286  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3278:3298  _rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3315:3325  reward > 0 */\n      dup1\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3311:3489  if (reward > 0) {... */\n      tag_161\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3351:3361  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3365:3366  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3342:3362  _rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3342:3350  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3342:3362  _rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3342:3366  _rewards[msg.sender] = 0 */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3381:3425  rewardToken.safeTransfer(msg.sender, reward) */\n      tag_162\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3381:3392  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3381:3405  rewardToken.safeTransfer */\n      and\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3418:3424  reward */\n      dup4\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3381:3405  rewardToken.safeTransfer */\n      tag_122\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3381:3425  rewardToken.safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3447:3477  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3458:3468  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3447:3477  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3447:3477  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3311:3489  if (reward > 0) {... */\n    tag_161:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3250:3496  {... */\n      pop\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2343:2344  _ */\n      pop\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2355:2375  _nonReentrantAfter() */\n      tag_164\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1749:1750  1 */\n      0x01\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2875:2882  _status */\n      0x00\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2875:2897  _status = _NOT_ENTERED */\n      sstore\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2692:2905  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2355:2375  _nonReentrantAfter() */\n    tag_164:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3171:3496  function getReward() public payable nonReentrant updateReward(msg.sender)... */\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4335:4559  function setDistributor(address newDistributor) external payable onlyDistributor... */\n    tag_56:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6334:6352  _state.distributor */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6322  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6312:6353  msg.sender == address(_state.distributor) */\n      eq\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6304:6373  require(msg.sender == address(_state.distributor), \"Not distributor\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4440:4468  newDistributor != address(0) */\n      dup2\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4432:4496  require(newDistributor != address(0), \"Cannot set to zero addr\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3325:3327   */\n      0x20\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4432:4496  require(newDistributor != address(0), \"Cannot set to zero addr\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3307:3328   */\n      mstore\n        /* \"#utility.yul\":3364:3366   */\n      0x17\n        /* \"#utility.yul\":3344:3362   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3337:3367   */\n      mstore\n        /* \"#utility.yul\":3403:3428   */\n      0x43616e6e6f742073657420746f207a65726f2061646472000000000000000000\n        /* \"#utility.yul\":3383:3401   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3376:3429   */\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x64\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4432:4496  require(newDistributor != address(0), \"Cannot set to zero addr\") */\n      tag_96\n        /* \"#utility.yul\":3123:3470   */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4432:4496  require(newDistributor != address(0), \"Cannot set to zero addr\") */\n    tag_170:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4507:4525  _state.distributor */\n      0x02\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4507:4551  _state.distributor = uint160(newDistributor) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4335:4559  function setDistributor(address newDistributor) external payable onlyDistributor... */\n      jump\t// out\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1771:1903  function lastTimeRewardApplicable() external view returns (uint256)... */\n    tag_59:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1830:1837  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1862:1895  _state.lastTimeRewardApplicable() */\n      tag_106\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1862:1868  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1862:1893  _state.lastTimeRewardApplicable */\n      tag_175\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1862:1895  _state.lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2464:2817  function stake(uint256 amount) external payable nonReentrant updateReward(msg.sender)... */\n    tag_68:\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      tag_178\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2330  _nonReentrantBefore */\n      tag_110\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2311:2332  _nonReentrantBefore() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2538:2548  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      tag_180\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5871:5882  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5857  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5870  _state.updateReward */\n      tag_113\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5851:5883  _state.updateReward(_totalStake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5900:5921  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n      tag_181\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      tag_182\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5965:5972  account */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5964  earned */\n      tag_25\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5958:5973  earned(account) */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5946  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5955  _rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5938:5973  _rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":6023:6050  _state.rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6011  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6020  _userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5988:6050  _userRewardPerTokenPaid[account] = _state.rewardPerTokenStored */\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":5896:6062  if (account != address(0)) {... */\n    tag_181:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2583:2584  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2574:2580  amount */\n      dup3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2574:2584  amount > 0 */\n      gt\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2566:2614  require(amount > 0, \"Must be greater than zero\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_101\n      jump\t// in\n    tag_184:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2627:2691  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_186\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2627:2639  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2627:2656  stakingToken.safeTransferFrom */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2657:2667  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2677:2681  this */\n      address\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2684:2690  amount */\n      dup6\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2627:2656  stakingToken.safeTransferFrom */\n      tag_103\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2627:2691  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2717:2723  amount */\n      dup2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2702:2713  _totalStake */\n      0x05\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2702:2723  _totalStake += amount */\n      dup3\n      dup3\n      sload\n      tag_187\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_187:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2744:2754  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2755  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2743  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2755  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2765  _balances[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2759:2765  amount */\n      dup5\n      swap3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2755  _balances[msg.sender] */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2765  _balances[msg.sender] += amount */\n      tag_188\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2759:2765  amount */\n      dup5\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2734:2765  _balances[msg.sender] += amount */\n      tag_93\n      jump\t// in\n    tag_188:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2783:2809  Staked(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2790:2800  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2783:2809  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2783:2809  Staked(msg.sender, amount) */\n      tag_123\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1911:2034  function rewardPerToken() external view returns (uint256)... */\n    tag_71:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1960:1967  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1992:2026  _state.rewardPerToken(_totalStake) */\n      tag_106\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":2014:2025  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1992:1998  _state */\n      0x01\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1992:2013  _state.rewardPerToken */\n      tag_85\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":1992:2026  _state.rewardPerToken(_totalStake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3504:4284  function exit() external payable... */\n    tag_74:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3573:3584  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3553:3585  _state.updateReward(_totalStake) */\n      tag_194\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3553:3559  _state */\n      0x01\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3553:3572  _state.updateReward */\n      tag_113\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3553:3585  _state.updateReward(_totalStake) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3626:3636  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3598:3613  uint256 balance */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3616:3637  _balances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3616:3625  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3616:3637  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3665:3683  earned(msg.sender) */\n      tag_195\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3665:3671  earned */\n      tag_25\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3665:3683  earned(msg.sender) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3734:3761  _state.rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3720:3730  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3696:3731  _userRewardPerTokenPaid[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3696:3719  _userRewardPerTokenPaid */\n      0x06\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3696:3731  _userRewardPerTokenPaid[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3696:3761  _userRewardPerTokenPaid[msg.sender] = _state.rewardPerTokenStored */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3781  _balances */\n      0x08\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3793  _balances[msg.sender] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3804  _balances[msg.sender] -= balance */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3648:3683  uint256 reward = earned(msg.sender) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3797:3804  balance */\n      dup5\n      swap3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3793  _balances[msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3696:3731  _userRewardPerTokenPaid[msg.sender] */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3804  _balances[msg.sender] -= balance */\n      tag_196\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3797:3804  balance */\n      dup5\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3772:3804  _balances[msg.sender] -= balance */\n      tag_87\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3824:3834  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3838:3839  0 */\n      0x00\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3815:3835  _rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3815:3823  _rewards */\n      0x07\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3815:3835  _rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3815:3839  _rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3850:3861  _totalStake */\n      0x05\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3850:3872  _totalStake -= balance */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3865:3872  balance */\n      dup5\n      swap3\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3838:3839  0 */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3850:3872  _totalStake -= balance */\n      tag_197\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3865:3872  balance */\n      dup5\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3850:3872  _totalStake -= balance */\n      tag_87\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3905:3916  _totalStake */\n      sload(0x05)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3885:3917  _state.updateReward(_totalStake) */\n      tag_198\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3885:3891  _state */\n      0x01\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3885:3904  _state.updateReward */\n      tag_113\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3885:3917  _state.updateReward(_totalStake) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3950:3961  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3934:3961  stakingToken == rewardToken */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3934:3946  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3934:3961  stakingToken == rewardToken */\n      and\n      sub\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3930:4183  if (stakingToken == rewardToken) {... */\n      tag_199\n      jumpi\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:4033  stakingToken.safeTransfer(msg.sender, balance + reward) */\n      tag_200\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4004:4014  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4016:4032  balance + reward */\n      tag_201\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4026:4032  reward */\n      dup4\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4016:4023  balance */\n      dup6\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4016:4032  balance + reward */\n      tag_93\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:3990  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:4003  stakingToken.safeTransfer */\n      and\n      swap2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:4033  stakingToken.safeTransfer(msg.sender, balance + reward) */\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:4003  stakingToken.safeTransfer */\n      tag_122\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3978:4033  stakingToken.safeTransfer(msg.sender, balance + reward) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3930:4183  if (stakingToken == rewardToken) {... */\n      jump(tag_204)\n    tag_199:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4066:4112  stakingToken.safeTransfer(msg.sender, balance) */\n      tag_203\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4066:4078  stakingToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4066:4091  stakingToken.safeTransfer */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4092:4102  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4104:4111  balance */\n      dup5\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4066:4091  stakingToken.safeTransfer */\n      tag_122\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4066:4112  stakingToken.safeTransfer(msg.sender, balance) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4127:4171  rewardToken.safeTransfer(msg.sender, reward) */\n      tag_204\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4127:4138  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4127:4151  rewardToken.safeTransfer */\n      and\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4152:4162  msg.sender */\n      caller\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4164:4170  reward */\n      dup4\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4127:4151  rewardToken.safeTransfer */\n      tag_122\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4127:4171  rewardToken.safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4200:4230  Withdrawn(msg.sender, balance) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4210:4220  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4200:4230  Withdrawn(msg.sender, balance) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4200:4230  Withdrawn(msg.sender, balance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4246:4276  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4257:4267  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4246:4276  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":4246:4276  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3542:4284  {... */\n      pop\n      pop\n        /* \"contracts/Staking_dApp/StakeBoredom.sol\":3504:4284  function exit() external payable... */\n      jump\t// out\n        /* \"contracts/Staking_dApp/PoolManager.sol\":541:907  function rewardPerToken(PoolState storage state, uint256 totalSupply) internal view returns (uint256)... */\n    tag_85:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":634:641  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/PoolManager.sol\":663:674  totalSupply */\n      dup2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":678:679  0 */\n      0x00\n        /* \"contracts/Staking_dApp/PoolManager.sol\":663:679  totalSupply == 0 */\n      sub\n        /* \"contracts/Staking_dApp/PoolManager.sol\":659:714  if (totalSupply == 0) return state.rewardPerTokenStored */\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/Staking_dApp/PoolManager.sol\":688:714  state.rewardPerTokenStored */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":681:714  return state.rewardPerTokenStored */\n      jump(tag_92)\n        /* \"contracts/Staking_dApp/PoolManager.sol\":659:714  if (totalSupply == 0) return state.rewardPerTokenStored */\n    tag_209:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":851:867  state.rewardRate */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":827:847  state.lastUpdateTime */\n      dup4\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":877:888  totalSupply */\n      dup4\n      swap2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":851:867  state.rewardRate */\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":827:847  state.lastUpdateTime */\n      0xffffffffffffffff\n      shl(0x80, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":779:824  Math.min(block.timestamp, state.periodFinish) */\n      tag_210\n      swap2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":788:803  block.timestamp */\n      timestamp\n      swap2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":805:823  state.periodFinish */\n      and\n        /* \"contracts/Staking_dApp/PoolManager.sol\":779:787  Math.min */\n      tag_211\n        /* \"contracts/Staking_dApp/PoolManager.sol\":779:824  Math.min(block.timestamp, state.periodFinish) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":779:847  Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime */\n      tag_212\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_212:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":778:867  (Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime) * state.rewardRate */\n      tag_213\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_213:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":778:874  (Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime) * state.rewardRate * 1e18 */\n      tag_214\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":870:874  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Staking_dApp/PoolManager.sol\":778:874  (Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime) * state.rewardRate * 1e18 */\n      tag_89\n      jump\t// in\n    tag_214:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":778:888  (Math.min(block.timestamp, state.periodFinish) - state.lastUpdateTime) * state.rewardRate * 1e18 / totalSupply */\n      tag_215\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_215:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":734:739  state */\n      dup4\n        /* \"contracts/Staking_dApp/PoolManager.sol\":734:760  state.rewardPerTokenStored */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":734:899  state.rewardPerTokenStored + (... */\n      tag_216\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_216:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":727:899  return state.rewardPerTokenStored + (... */\n      swap4\n        /* \"contracts/Staking_dApp/PoolManager.sol\":541:907  function rewardPerToken(PoolState storage state, uint256 totalSupply) internal view returns (uint256)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":926:1174  function safeTransferFrom(... */\n    tag_103:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1097:1165  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3733:3748   */\n      dup1\n      dup6\n      and\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1097:1165  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3715:3749   */\n      mstore\n        /* \"#utility.yul\":3785:3800   */\n      dup4\n      and\n        /* \"#utility.yul\":3765:3783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3758:3801   */\n      mstore\n        /* \"#utility.yul\":3817:3835   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":3810:3844   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1070:1166  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_218\n      swap1\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1090:1095  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1120:1147  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":3650:3668   */\n      0x84\n      add\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1097:1165  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n    tag_219:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1070:1089  _callOptionalReturn */\n      tag_221\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":1070:1166  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":926:1174  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/PoolManager.sol\":915:1073  function getRewardForDuration(PoolState storage state) internal view returns (uint256)... */\n    tag_107:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1044:1065  state.rewardsDuration */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1025:1041  state.rewardRate */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":993:1000  uint256 */\n      0x00\n      swap2\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1025:1065  state.rewardRate * state.rewardsDuration */\n      tag_92\n      swap2\n      shl(0x40, 0x01)\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1044:1065  state.rewardsDuration */\n      swap1\n      swap2\n      div\n      0xffffffffffffffff\n      and\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1025:1065  state.rewardRate * state.rewardsDuration */\n      tag_89\n      jump\t// in\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2391:2684  function _nonReentrantBefore() private {... */\n    tag_110:\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1793:1794  2 */\n      0x02\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2525:2532  _status */\n      sload(0x00)\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2525:2544  _status != _ENTERED */\n      sub\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2517:2580  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4057:4059   */\n      0x20\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2517:2580  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4039:4060   */\n      mstore\n        /* \"#utility.yul\":4096:4098   */\n      0x1f\n        /* \"#utility.yul\":4076:4094   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4069:4099   */\n      mstore\n        /* \"#utility.yul\":4135:4168   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4115:4133   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4108:4169   */\n      mstore\n        /* \"#utility.yul\":4186:4204   */\n      0x64\n      add\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2517:2580  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n        /* \"#utility.yul\":3855:4210   */\n      jump\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2517:2580  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_225:\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":1793:1794  2 */\n      0x02\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2658:2665  _status */\n      0x00\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2658:2676  _status = _ENTERED */\n      sstore\n        /* \"contracts/Staking_dApp/ReentrancyGuard.sol\":2391:2684  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1081:1308  function updateReward(PoolState storage state, uint256 supply) internal... */\n    tag_113:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1198:1227  rewardPerToken(state, supply) */\n      tag_229\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1213:1218  state */\n      dup3\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1220:1226  supply */\n      dup3\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1198:1212  rewardPerToken */\n      tag_85\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1198:1227  rewardPerToken(state, supply) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1169:1195  state.rewardPerTokenStored */\n      0x03\n      dup4\n      add\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1169:1227  state.rewardPerTokenStored = rewardPerToken(state, supply) */\n      sstore\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1268:1299  lastTimeRewardApplicable(state) */\n      tag_230\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1169:1174  state */\n      dup3\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1268:1292  lastTimeRewardApplicable */\n      tag_175\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1268:1299  lastTimeRewardApplicable(state) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1238:1300  state.lastUpdateTime = uint64(lastTimeRewardApplicable(state)) */\n      dup3\n      sload\n      0xffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      shl(0x80, 0x01)\n      mul\n      not(shl(0x80, 0xffffffffffffffff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Staking_dApp/PoolManager.sol\":1081:1308  function updateReward(PoolState storage state, uint256 supply) internal... */\n      jump\t// out\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":707:918  function safeTransfer(... */\n    tag_122:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4407:4439   */\n      dup4\n      and\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4389:4440   */\n      mstore\n        /* \"#utility.yul\":4456:4474   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4449:4483   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":824:910  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_232\n      swap1\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":844:849  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":874:897  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":4362:4380   */\n      0x64\n      add\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      tag_219\n        /* \"#utility.yul\":4215:4489   */\n      jump\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":824:910  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n    tag_232:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":707:918  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/PoolManager.sol\":366:533  function lastTimeRewardApplicable(PoolState storage state) internal view returns (uint256)... */\n    tag_175:\n        /* \"contracts/Staking_dApp/PoolManager.sol\":506:524  state.periodFinish */\n      dup1\n      sload\n        /* \"contracts/Staking_dApp/PoolManager.sol\":448:455  uint256 */\n      0x00\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":480:525  Math.min(block.timestamp, state.periodFinish) */\n      tag_92\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":489:504  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/Staking_dApp/PoolManager.sol\":506:524  state.periodFinish */\n      0xffffffffffffffff\n      and\n        /* \"contracts/Staking_dApp/Math.sol\":465:571  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"contracts/Staking_dApp/Math.sol\":523:530  uint256 */\n      0x00\n        /* \"contracts/Staking_dApp/Math.sol\":554:555  b */\n      dup2\n        /* \"contracts/Staking_dApp/Math.sol\":550:551  a */\n      dup4\n        /* \"contracts/Staking_dApp/Math.sol\":550:555  a < b */\n      lt\n        /* \"contracts/Staking_dApp/Math.sol\":550:563  a < b ? a : b */\n      tag_239\n      jumpi\n        /* \"contracts/Staking_dApp/Math.sol\":562:563  b */\n      dup2\n        /* \"contracts/Staking_dApp/Math.sol\":550:563  a < b ? a : b */\n      jump(tag_216)\n    tag_239:\n      pop\n        /* \"contracts/Staking_dApp/Math.sol\":558:559  a */\n      swap1\n      swap2\n        /* \"contracts/Staking_dApp/Math.sol\":465:571  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3280:3996  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_221:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3704:3727  bytes memory returndata */\n      0x00\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_242\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3758:3762  data */\n      dup3\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3738:3743  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3730:3757  address(token).functionCall */\n      and\n      tag_243\n      swap1\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3814:3831  returndata.length */\n      dup1\n      mload\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3704:3799  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3814:3835  returndata.length > 0 */\n      iszero\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3810:3989  if (returndata.length > 0) {... */\n      tag_232\n      jumpi\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3911:3921  returndata */\n      dup1\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3900:3930  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3892:3977  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3892:3977  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4960:4981   */\n      mstore\n        /* \"#utility.yul\":5017:5019   */\n      0x2a\n        /* \"#utility.yul\":4997:5015   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4990:5020   */\n      mstore\n        /* \"#utility.yul\":5056:5090   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":5036:5054   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5029:5091   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":5107:5125   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5100:5140   */\n      mstore\n        /* \"#utility.yul\":5157:5176   */\n      0x84\n      add\n        /* \"contracts/Staking_dApp/SafeERC20.sol\":3892:3977  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_96\n        /* \"#utility.yul\":4776:5182   */\n      jump\n        /* \"contracts/Staking_dApp/Address.sol\":3940:4169  function functionCall(... */\n    tag_243:\n        /* \"contracts/Staking_dApp/Address.sol\":4077:4089  bytes memory */\n      0x60\n        /* \"contracts/Staking_dApp/Address.sol\":4109:4161  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_251\n        /* \"contracts/Staking_dApp/Address.sol\":4131:4137  target */\n      dup5\n        /* \"contracts/Staking_dApp/Address.sol\":4139:4143  data */\n      dup5\n        /* \"contracts/Staking_dApp/Address.sol\":4145:4146  0 */\n      0x00\n        /* \"contracts/Staking_dApp/Address.sol\":4148:4160  errorMessage */\n      dup6\n        /* \"contracts/Staking_dApp/Address.sol\":4109:4130  functionCallWithValue */\n      tag_252\n        /* \"contracts/Staking_dApp/Address.sol\":4109:4161  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/Staking_dApp/Address.sol\":4102:4161  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"contracts/Staking_dApp/Address.sol\":3940:4169  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/Address.sol\":5060:5570  function functionCallWithValue(... */\n    tag_252:\n        /* \"contracts/Staking_dApp/Address.sol\":5230:5242  bytes memory */\n      0x60\n        /* \"contracts/Staking_dApp/Address.sol\":5288:5293  value */\n      dup3\n        /* \"contracts/Staking_dApp/Address.sol\":5263:5284  address(this).balance */\n      selfbalance\n        /* \"contracts/Staking_dApp/Address.sol\":5263:5293  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/Staking_dApp/Address.sol\":5255:5336  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5389:5391   */\n      0x20\n        /* \"contracts/Staking_dApp/Address.sol\":5255:5336  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5371:5392   */\n      mstore\n        /* \"#utility.yul\":5428:5430   */\n      0x26\n        /* \"#utility.yul\":5408:5426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5401:5431   */\n      mstore\n        /* \"#utility.yul\":5467:5501   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":5447:5465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5440:5502   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":5518:5536   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5511:5547   */\n      mstore\n        /* \"#utility.yul\":5564:5583   */\n      0x84\n      add\n        /* \"contracts/Staking_dApp/Address.sol\":5255:5336  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_96\n        /* \"#utility.yul\":5187:5589   */\n      jump\n        /* \"contracts/Staking_dApp/Address.sol\":5255:5336  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/Address.sol\":1490:1509  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"contracts/Staking_dApp/Address.sol\":5347:5407  require(isContract(target), \"Address: call to non-contract\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5796:5798   */\n      0x20\n        /* \"contracts/Staking_dApp/Address.sol\":5347:5407  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5778:5799   */\n      mstore\n        /* \"#utility.yul\":5835:5837   */\n      0x1d\n        /* \"#utility.yul\":5815:5833   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5808:5838   */\n      mstore\n        /* \"#utility.yul\":5874:5905   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":5854:5872   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5847:5906   */\n      mstore\n        /* \"#utility.yul\":5923:5941   */\n      0x64\n      add\n        /* \"contracts/Staking_dApp/Address.sol\":5347:5407  require(isContract(target), \"Address: call to non-contract\") */\n      tag_96\n        /* \"#utility.yul\":5594:5947   */\n      jump\n        /* \"contracts/Staking_dApp/Address.sol\":5347:5407  require(isContract(target), \"Address: call to non-contract\") */\n    tag_259:\n        /* \"contracts/Staking_dApp/Address.sol\":5421:5433  bool success */\n      0x00\n        /* \"contracts/Staking_dApp/Address.sol\":5435:5458  bytes memory returndata */\n      dup1\n        /* \"contracts/Staking_dApp/Address.sol\":5462:5468  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking_dApp/Address.sol\":5462:5473  target.call */\n      and\n        /* \"contracts/Staking_dApp/Address.sol\":5481:5486  value */\n      dup6\n        /* \"contracts/Staking_dApp/Address.sol\":5488:5492  data */\n      dup8\n        /* \"contracts/Staking_dApp/Address.sol\":5462:5493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_266\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_265)\n    tag_266:\n      0x60\n      swap2\n      pop\n    tag_265:\n      pop\n        /* \"contracts/Staking_dApp/Address.sol\":5420:5493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Staking_dApp/Address.sol\":5511:5562  verifyCallResult(success, returndata, errorMessage) */\n      tag_267\n        /* \"contracts/Staking_dApp/Address.sol\":5528:5535  success */\n      dup3\n        /* \"contracts/Staking_dApp/Address.sol\":5537:5547  returndata */\n      dup3\n        /* \"contracts/Staking_dApp/Address.sol\":5549:5561  errorMessage */\n      dup7\n        /* \"contracts/Staking_dApp/Address.sol\":5511:5527  verifyCallResult */\n      tag_268\n        /* \"contracts/Staking_dApp/Address.sol\":5511:5562  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/Staking_dApp/Address.sol\":5504:5562  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"contracts/Staking_dApp/Address.sol\":5060:5570  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking_dApp/Address.sol\":7746:8458  function verifyCallResult(... */\n    tag_268:\n        /* \"contracts/Staking_dApp/Address.sol\":7896:7908  bytes memory */\n      0x60\n        /* \"contracts/Staking_dApp/Address.sol\":7925:7932  success */\n      dup4\n        /* \"contracts/Staking_dApp/Address.sol\":7921:8451  if (success) {... */\n      iszero\n      tag_271\n      jumpi\n      pop\n        /* \"contracts/Staking_dApp/Address.sol\":7956:7966  returndata */\n      dup2\n        /* \"contracts/Staking_dApp/Address.sol\":7949:7966  return returndata */\n      jump(tag_216)\n        /* \"contracts/Staking_dApp/Address.sol\":7921:8451  if (success) {... */\n    tag_271:\n        /* \"contracts/Staking_dApp/Address.sol\":8070:8087  returndata.length */\n      dup3\n      mload\n        /* \"contracts/Staking_dApp/Address.sol\":8070:8091  returndata.length > 0 */\n      iszero\n        /* \"contracts/Staking_dApp/Address.sol\":8066:8440  if (returndata.length > 0) {... */\n      tag_273\n      jumpi\n        /* \"contracts/Staking_dApp/Address.sol\":8268:8278  returndata */\n      dup3\n        /* \"contracts/Staking_dApp/Address.sol\":8262:8279  mload(returndata) */\n      mload\n        /* \"contracts/Staking_dApp/Address.sol\":8329:8344  returndata_size */\n      dup1\n        /* \"contracts/Staking_dApp/Address.sol\":8316:8326  returndata */\n      dup5\n        /* \"contracts/Staking_dApp/Address.sol\":8312:8314  32 */\n      0x20\n        /* \"contracts/Staking_dApp/Address.sol\":8308:8327  add(32, returndata) */\n      add\n        /* \"contracts/Staking_dApp/Address.sol\":8301:8345  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/Staking_dApp/Address.sol\":8066:8440  if (returndata.length > 0) {... */\n    tag_273:\n        /* \"contracts/Staking_dApp/Address.sol\":8411:8423  errorMessage */\n      dup2\n        /* \"contracts/Staking_dApp/Address.sol\":8404:8424  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":14:300   */\n    tag_24:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_281:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":487:667   */\n    tag_30:\n        /* \"#utility.yul\":546:552   */\n      0x00\n        /* \"#utility.yul\":599:601   */\n      0x20\n        /* \"#utility.yul\":587:596   */\n      dup3\n        /* \"#utility.yul\":578:585   */\n      dup5\n        /* \"#utility.yul\":574:597   */\n      sub\n        /* \"#utility.yul\":570:602   */\n      slt\n        /* \"#utility.yul\":567:619   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":615:616   */\n      0x00\n        /* \"#utility.yul\":612:613   */\n      dup1\n        /* \"#utility.yul\":605:617   */\n      revert\n        /* \"#utility.yul\":567:619   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":638:661   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":487:667   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1102:1229   */\n    tag_277:\n        /* \"#utility.yul\":1163:1173   */\n      0x4e487b71\n        /* \"#utility.yul\":1158:1161   */\n      0xe0\n        /* \"#utility.yul\":1154:1174   */\n      shl\n        /* \"#utility.yul\":1151:1152   */\n      0x00\n        /* \"#utility.yul\":1144:1175   */\n      mstore\n        /* \"#utility.yul\":1194:1198   */\n      0x11\n        /* \"#utility.yul\":1191:1192   */\n      0x04\n        /* \"#utility.yul\":1184:1199   */\n      mstore\n        /* \"#utility.yul\":1218:1222   */\n      0x24\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1223   */\n      revert\n        /* \"#utility.yul\":1234:1359   */\n    tag_87:\n        /* \"#utility.yul\":1274:1278   */\n      0x00\n        /* \"#utility.yul\":1302:1303   */\n      dup3\n        /* \"#utility.yul\":1299:1300   */\n      dup3\n        /* \"#utility.yul\":1296:1304   */\n      lt\n        /* \"#utility.yul\":1293:1327   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1307:1325   */\n      tag_291\n      tag_277\n      jump\t// in\n    tag_291:\n      pop\n        /* \"#utility.yul\":1344:1353   */\n      sub\n      swap1\n        /* \"#utility.yul\":1234:1359   */\n      jump\t// out\n        /* \"#utility.yul\":1364:1532   */\n    tag_89:\n        /* \"#utility.yul\":1404:1411   */\n      0x00\n        /* \"#utility.yul\":1470:1471   */\n      dup2\n        /* \"#utility.yul\":1466:1467   */\n      0x00\n        /* \"#utility.yul\":1462:1468   */\n      not\n        /* \"#utility.yul\":1458:1472   */\n      div\n        /* \"#utility.yul\":1455:1456   */\n      dup4\n        /* \"#utility.yul\":1452:1473   */\n      gt\n        /* \"#utility.yul\":1447:1448   */\n      dup3\n        /* \"#utility.yul\":1440:1449   */\n      iszero\n        /* \"#utility.yul\":1433:1450   */\n      iszero\n        /* \"#utility.yul\":1429:1474   */\n      and\n        /* \"#utility.yul\":1426:1497   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1477:1495   */\n      tag_294\n      tag_277\n      jump\t// in\n    tag_294:\n      pop\n        /* \"#utility.yul\":1517:1526   */\n      mul\n      swap1\n        /* \"#utility.yul\":1364:1532   */\n      jump\t// out\n        /* \"#utility.yul\":1537:1754   */\n    tag_91:\n        /* \"#utility.yul\":1577:1578   */\n      0x00\n        /* \"#utility.yul\":1603:1604   */\n      dup3\n        /* \"#utility.yul\":1593:1725   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1647:1657   */\n      0x4e487b71\n        /* \"#utility.yul\":1642:1645   */\n      0xe0\n        /* \"#utility.yul\":1638:1658   */\n      shl\n        /* \"#utility.yul\":1635:1636   */\n      0x00\n        /* \"#utility.yul\":1628:1659   */\n      mstore\n        /* \"#utility.yul\":1682:1686   */\n      0x12\n        /* \"#utility.yul\":1679:1680   */\n      0x04\n        /* \"#utility.yul\":1672:1687   */\n      mstore\n        /* \"#utility.yul\":1710:1714   */\n      0x24\n        /* \"#utility.yul\":1707:1708   */\n      0x00\n        /* \"#utility.yul\":1700:1715   */\n      revert\n        /* \"#utility.yul\":1593:1725   */\n    tag_296:\n      pop\n        /* \"#utility.yul\":1739:1748   */\n      div\n      swap1\n        /* \"#utility.yul\":1537:1754   */\n      jump\t// out\n        /* \"#utility.yul\":1759:1887   */\n    tag_93:\n        /* \"#utility.yul\":1799:1802   */\n      0x00\n        /* \"#utility.yul\":1830:1831   */\n      dup3\n        /* \"#utility.yul\":1826:1832   */\n      not\n        /* \"#utility.yul\":1823:1824   */\n      dup3\n        /* \"#utility.yul\":1820:1833   */\n      gt\n        /* \"#utility.yul\":1817:1856   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1836:1854   */\n      tag_299\n      tag_277\n      jump\t// in\n    tag_299:\n      pop\n        /* \"#utility.yul\":1872:1881   */\n      add\n      swap1\n        /* \"#utility.yul\":1759:1887   */\n      jump\t// out\n        /* \"#utility.yul\":1892:2231   */\n    tag_97:\n        /* \"#utility.yul\":2094:2096   */\n      0x20\n        /* \"#utility.yul\":2076:2097   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2133:2135   */\n      0x0f\n        /* \"#utility.yul\":2113:2131   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2106:2136   */\n      mstore\n      shl(0x89, 0x2737ba103234b9ba3934b13aba37b9)\n        /* \"#utility.yul\":2167:2169   */\n      0x40\n        /* \"#utility.yul\":2152:2170   */\n      dup3\n      add\n        /* \"#utility.yul\":2145:2190   */\n      mstore\n        /* \"#utility.yul\":2222:2224   */\n      0x60\n        /* \"#utility.yul\":2207:2225   */\n      add\n      swap1\n        /* \"#utility.yul\":1892:2231   */\n      jump\t// out\n        /* \"#utility.yul\":2236:2585   */\n    tag_101:\n        /* \"#utility.yul\":2438:2440   */\n      0x20\n        /* \"#utility.yul\":2420:2441   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2477:2479   */\n      0x19\n        /* \"#utility.yul\":2457:2475   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2450:2480   */\n      mstore\n        /* \"#utility.yul\":2516:2543   */\n      0x4d7573742062652067726561746572207468616e207a65726f00000000000000\n        /* \"#utility.yul\":2511:2513   */\n      0x40\n        /* \"#utility.yul\":2496:2514   */\n      dup3\n      add\n        /* \"#utility.yul\":2489:2544   */\n      mstore\n        /* \"#utility.yul\":2576:2578   */\n      0x60\n        /* \"#utility.yul\":2561:2579   */\n      add\n      swap1\n        /* \"#utility.yul\":2236:2585   */\n      jump\t// out\n        /* \"#utility.yul\":2590:2774   */\n    tag_145:\n        /* \"#utility.yul\":2660:2666   */\n      0x00\n        /* \"#utility.yul\":2713:2715   */\n      0x20\n        /* \"#utility.yul\":2701:2710   */\n      dup3\n        /* \"#utility.yul\":2692:2699   */\n      dup5\n        /* \"#utility.yul\":2688:2711   */\n      sub\n        /* \"#utility.yul\":2684:2716   */\n      slt\n        /* \"#utility.yul\":2681:2733   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2726:2727   */\n      dup1\n        /* \"#utility.yul\":2719:2731   */\n      revert\n        /* \"#utility.yul\":2681:2733   */\n    tag_303:\n      pop\n        /* \"#utility.yul\":2752:2768   */\n      mload\n      swap2\n        /* \"#utility.yul\":2590:2774   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4494:4771   */\n    tag_246:\n        /* \"#utility.yul\":4561:4567   */\n      0x00\n        /* \"#utility.yul\":4614:4616   */\n      0x20\n        /* \"#utility.yul\":4602:4611   */\n      dup3\n        /* \"#utility.yul\":4593:4600   */\n      dup5\n        /* \"#utility.yul\":4589:4612   */\n      sub\n        /* \"#utility.yul\":4585:4617   */\n      slt\n        /* \"#utility.yul\":4582:4634   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4630:4631   */\n      0x00\n        /* \"#utility.yul\":4627:4628   */\n      dup1\n        /* \"#utility.yul\":4620:4632   */\n      revert\n        /* \"#utility.yul\":4582:4634   */\n    tag_310:\n        /* \"#utility.yul\":4662:4671   */\n      dup2\n        /* \"#utility.yul\":4656:4672   */\n      mload\n        /* \"#utility.yul\":4715:4720   */\n      dup1\n        /* \"#utility.yul\":4708:4721   */\n      iszero\n        /* \"#utility.yul\":4701:4722   */\n      iszero\n        /* \"#utility.yul\":4694:4699   */\n      dup2\n        /* \"#utility.yul\":4691:4723   */\n      eq\n        /* \"#utility.yul\":4681:4741   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":4737:4738   */\n      0x00\n        /* \"#utility.yul\":4734:4735   */\n      dup1\n        /* \"#utility.yul\":4727:4739   */\n      revert\n        /* \"#utility.yul\":5952:6210   */\n    tag_278:\n        /* \"#utility.yul\":6024:6025   */\n      0x00\n        /* \"#utility.yul\":6034:6147   */\n    tag_316:\n        /* \"#utility.yul\":6048:6054   */\n      dup4\n        /* \"#utility.yul\":6045:6046   */\n      dup2\n        /* \"#utility.yul\":6042:6055   */\n      lt\n        /* \"#utility.yul\":6034:6147   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6124:6135   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6118:6136   */\n      mload\n        /* \"#utility.yul\":6105:6116   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6098:6137   */\n      mstore\n        /* \"#utility.yul\":6070:6072   */\n      0x20\n        /* \"#utility.yul\":6063:6073   */\n      add\n        /* \"#utility.yul\":6034:6147   */\n      jump(tag_316)\n    tag_318:\n        /* \"#utility.yul\":6165:6171   */\n      dup4\n        /* \"#utility.yul\":6162:6163   */\n      dup2\n        /* \"#utility.yul\":6159:6172   */\n      gt\n        /* \"#utility.yul\":6156:6204   */\n      iszero\n      tag_218\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":6200:6201   */\n      0x00\n        /* \"#utility.yul\":6182:6198   */\n      swap2\n      add\n        /* \"#utility.yul\":6175:6202   */\n      mstore\n        /* \"#utility.yul\":5952:6210   */\n      jump\t// out\n        /* \"#utility.yul\":6215:6489   */\n    tag_263:\n        /* \"#utility.yul\":6344:6347   */\n      0x00\n        /* \"#utility.yul\":6382:6388   */\n      dup3\n        /* \"#utility.yul\":6376:6389   */\n      mload\n        /* \"#utility.yul\":6398:6451   */\n      tag_321\n        /* \"#utility.yul\":6444:6450   */\n      dup2\n        /* \"#utility.yul\":6439:6442   */\n      dup5\n        /* \"#utility.yul\":6432:6436   */\n      0x20\n        /* \"#utility.yul\":6424:6430   */\n      dup8\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6398:6451   */\n      tag_278\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6467:6483   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":6215:6489   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:6877   */\n    tag_276:\n        /* \"#utility.yul\":6643:6645   */\n      0x20\n        /* \"#utility.yul\":6632:6641   */\n      dup2\n        /* \"#utility.yul\":6625:6646   */\n      mstore\n        /* \"#utility.yul\":6606:6610   */\n      0x00\n        /* \"#utility.yul\":6675:6681   */\n      dup3\n        /* \"#utility.yul\":6669:6682   */\n      mload\n        /* \"#utility.yul\":6718:6724   */\n      dup1\n        /* \"#utility.yul\":6713:6715   */\n      0x20\n        /* \"#utility.yul\":6702:6711   */\n      dup5\n        /* \"#utility.yul\":6698:6716   */\n      add\n        /* \"#utility.yul\":6691:6725   */\n      mstore\n        /* \"#utility.yul\":6734:6800   */\n      tag_323\n        /* \"#utility.yul\":6793:6799   */\n      dup2\n        /* \"#utility.yul\":6788:6790   */\n      0x40\n        /* \"#utility.yul\":6777:6786   */\n      dup6\n        /* \"#utility.yul\":6773:6791   */\n      add\n        /* \"#utility.yul\":6768:6770   */\n      0x20\n        /* \"#utility.yul\":6760:6766   */\n      dup8\n        /* \"#utility.yul\":6756:6771   */\n      add\n        /* \"#utility.yul\":6734:6800   */\n      tag_278\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6861:6863   */\n      0x1f\n        /* \"#utility.yul\":6840:6855   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6836:6865   */\n      and\n        /* \"#utility.yul\":6821:6866   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6868:6870   */\n      0x40\n        /* \"#utility.yul\":6817:6871   */\n      add\n      swap3\n        /* \"#utility.yul\":6494:6877   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201915570cb78927cf52019c77e208571b82c3955827d3146b94687a50c4d1485964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_604": {
									"entryPoint": null,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_952": {
									"entryPoint": null,
									"id": 952,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_contract$_IERC20_$378t_contract$_IERC20_$378t_uint64_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"checked_mul_t_uint64": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1245:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:7"
															},
															"nodeType": "YulIf",
															"src": "69:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:7",
														"type": ""
													}
												],
												"src": "14:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "309:562:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "356:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "368:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "330:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "339:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "326:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "351:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:33:7"
															},
															"nodeType": "YulIf",
															"src": "319:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "385:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "444:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "419:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "419:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "459:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "469:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "483:40:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "508:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "519:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "504:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "498:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:25:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "487:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "557:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "532:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "532:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "574:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "584:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "600:40:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "625:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "636:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "621:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "621:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "615:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "615:25:7"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "604:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "674:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "649:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:17:7",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "701:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "717:40:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "732:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:25:7"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "721:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "823:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "832:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "835:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "825:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "825:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nodeType": "YulIdentifier",
																				"src": "779:7:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_3",
																						"nodeType": "YulIdentifier",
																						"src": "792:7:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "809:2:7",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "813:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "805:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "805:10:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "817:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "801:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "801:18:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "788:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "788:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "776:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "776:45:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "769:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:53:7"
															},
															"nodeType": "YulIf",
															"src": "766:73:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "848:17:7",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "858:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC20_$378t_contract$_IERC20_$378t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "282:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "290:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "298:6:7",
														"type": ""
													}
												],
												"src": "150:721:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "927:316:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "937:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "955:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "963:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "947:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "941:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "974:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "989:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "992:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:10:7"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "978:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1004:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1019:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1022:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:10:7"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "1008:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1093:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1121:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1126:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1117:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1117:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1161:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1151:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1189:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1179:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1179:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "1055:3:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1048:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:11:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1041:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1041:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1074:2:7"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "1078:3:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:12:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1062:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:47:7"
															},
															"nodeType": "YulIf",
															"src": "1034:170:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1213:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "1228:3:7"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "1233:3:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:13:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1213:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "906:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "909:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "915:7:7",
														"type": ""
													}
												],
												"src": "876:367:7"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$378t_contract$_IERC20_$378t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        if iszero(eq(value_3, and(value_3, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value3 := value_3\n    }\n    function checked_mul_t_uint64(x, y) -> product\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x_1, y_1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b506040516200156d3803806200156d8339810160408190526200003491620000cf565b60016000556001600160a01b03808416608052821660a0526200005b816201518062000142565b600180546001600160401b03929092166801000000000000000002600160401b600160801b03199092169190911790555050600280546001600160a01b039093166001600160a01b0319909316929092179091555062000180565b6001600160a01b0381168114620000cc57600080fd5b50565b60008060008060808587031215620000e657600080fd5b8451620000f381620000b6565b60208601519094506200010681620000b6565b60408601519093506200011981620000b6565b60608601519092506001600160401b03811681146200013757600080fd5b939692955090935050565b60006001600160401b03828116848216811515828404821116156200017757634e487b7160e01b600052601160045260246000fd5b02949350505050565b60805160a051611373620001fa6000396000818161028c015281816103a801528181610639015281816106da0152818161088701528181610b820152610c5e0152600081816101ca015281816104b9015281816106b001528181610a3801528181610bac01528181610bf10152610c2a01526113736000f3fe6080604052600436106100f25760003560e01c806375619ab51161008a578063cd3daf9d11610059578063cd3daf9d1461025d578063e9fad8ee14610272578063f7c618c11461027a578063fe961f61146102ae57600080fd5b806375619ab51461020457806380faa57d14610217578063893d20e81461022c578063a694fc3a1461024a57600080fd5b80633c6b16ab116100c65780633c6b16ab146101675780633d18b9121461017a57806370a082311461018257806372f702f3146101b857600080fd5b80628cc262146100f757806316c621e01461012a5780631c1f78eb1461013f5780632e1a7d4d14610154575b600080fd5b34801561010357600080fd5b5061011761011236600461115f565b6102c3565b6040519081526020015b60405180910390f35b61013d610138366004611188565b610348565b005b34801561014b57600080fd5b506101176103dc565b61013d610162366004611188565b6103ed565b61013d610175366004611188565b610521565b61013d6107f8565b34801561018e57600080fd5b5061011761019d36600461115f565b6001600160a01b031660009081526008602052604090205490565b3480156101c457600080fd5b506101ec7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610121565b61013d61021236600461115f565b6108fa565b34801561022357600080fd5b5061011761099c565b34801561023857600080fd5b506002546001600160a01b03166101ec565b61013d610258366004611188565b6109a8565b34801561026957600080fd5b50610117610acd565b61013d610ae5565b34801561028657600080fd5b506101ec7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ba57600080fd5b50600554610117565b6001600160a01b0381166000908152600760209081526040808320546006909252822054600554670de0b6b3a7640000919061030190600190610cf3565b61030b91906111b7565b6001600160a01b03851660009081526008602052604090205461032e91906111ce565b61033891906111ed565b610342919061120f565b92915050565b6002546001600160a01b0316331461037b5760405162461bcd60e51b815260040161037290611227565b60405180910390fd5b6000811161039b5760405162461bcd60e51b815260040161037290611250565b6103d06001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610d77565b6103d981610521565b50565b60006103e86001610de8565b905090565b6103f5610e0e565b3361040c6005546001610e6790919063ffffffff16565b6001600160a01b0381161561045057610424816102c3565b6001600160a01b0382166000908152600760209081526040808320939093556004546006909152919020555b600082116104705760405162461bcd60e51b815260040161037290611250565b816005600082825461048291906111b7565b909155505033600090815260086020526040812080548492906104a69084906111b7565b909155506104e090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610eab565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2506103d96001600055565b60006105396005546001610e6790919063ffffffff16565b6001600160a01b0381161561057d57610551816102c3565b6001600160a01b0382166000908152600760209081526040808320939093556004546006909152919020555b6002546001600160a01b031633146105a75760405162461bcd60e51b815260040161037290611227565b60015467ffffffffffffffff600160401b82048116911642106105d6576105ce81846111ed565b600355610621565b6001546000906105f190429067ffffffffffffffff166111b7565b60035490915060009061060490836111ce565b905082610611828761120f565b61061b91906111ed565b60035550505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190611287565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036107175760055461071490826111b7565b90505b61072182826111ed565b60035411156107645760405162461bcd60e51b815260206004820152600f60248201526e0a4caeec2e4c840e8dede40d0d2ced608b1b6044820152606401610372565b6001805467ffffffffffffffff42908116600160801b0267ffffffffffffffff60801b199092169190911790915561079d90839061120f565b6001805467ffffffffffffffff191667ffffffffffffffff929092169190911790556040518481527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150505050565b610800610e0e565b336108176005546001610e6790919063ffffffff16565b6001600160a01b0381161561085b5761082f816102c3565b6001600160a01b0382166000908152600760209081526040808320939093556004546006909152919020555b3360009081526007602052604090205480156108ec57336000818152600760205260408120556108b6907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610eab565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50506108f86001600055565b565b6002546001600160a01b031633146109245760405162461bcd60e51b815260040161037290611227565b6001600160a01b03811661097a5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742073657420746f207a65726f20616464720000000000000000006044820152606401610372565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e86001610ee0565b6109b0610e0e565b336109c76005546001610e6790919063ffffffff16565b6001600160a01b03811615610a0b576109df816102c3565b6001600160a01b0382166000908152600760209081526040808320939093556004546006909152919020555b60008211610a2b5760405162461bcd60e51b815260040161037290611250565b610a606001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610d77565b8160056000828254610a72919061120f565b90915550503360009081526008602052604081208054849290610a9690849061120f565b909155505060405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161050e565b60006103e86005546001610cf390919063ffffffff16565b600554610af490600190610e67565b3360008181526008602052604081205491610b0e906102c3565b600454336000908152600660209081526040808320939093556008905290812080549293508492909190610b439084906111b7565b909155505033600090815260076020526040812081905560058054849290610b6c9084906111b7565b9091555050600554610b8090600190610e67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610c1d57610c1833610be7838561120f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610eab565b610c85565b610c516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610eab565b610c856001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610eab565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a260405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25050565b600081600003610d0857506003820154610342565b6002830154835483919067ffffffffffffffff600160801b8204811691610d3191429116610ef6565b610d3b91906111b7565b610d4591906111ce565b610d5790670de0b6b3a76400006111ce565b610d6191906111ed565b8360030154610d70919061120f565b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610de29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f0c565b50505050565b8054600282015460009161034291600160401b90910467ffffffffffffffff16906111ce565b600260005403610e605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610372565b6002600055565b610e718282610cf3565b6003830155610e7f82610ee0565b825467ffffffffffffffff91909116600160801b0267ffffffffffffffff60801b199091161790915550565b6040516001600160a01b038316602482015260448101829052610edb90849063a9059cbb60e01b90606401610dab565b505050565b805460009061034290429067ffffffffffffffff165b6000818310610f055781610d70565b5090919050565b6000610f61826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fde9092919063ffffffff16565b805190915015610edb5780806020019051810190610f7f91906112a0565b610edb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610372565b6060610fed8484600085610ff5565b949350505050565b6060824710156110565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610372565b6001600160a01b0385163b6110ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610372565b600080866001600160a01b031685876040516110c991906112ee565b60006040518083038185875af1925050503d8060008114611106576040519150601f19603f3d011682016040523d82523d6000602084013e61110b565b606091505b509150915061111b828286611126565b979650505050505050565b60608315611135575081610d70565b8251156111455782518084602001fd5b8160405162461bcd60e51b8152600401610372919061130a565b60006020828403121561117157600080fd5b81356001600160a01b0381168114610d7057600080fd5b60006020828403121561119a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111c9576111c96111a1565b500390565b60008160001904831182151516156111e8576111e86111a1565b500290565b60008261120a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611222576112226111a1565b500190565b6020808252600f908201526e2737ba103234b9ba3934b13aba37b960891b604082015260600190565b60208082526019908201527f4d7573742062652067726561746572207468616e207a65726f00000000000000604082015260600190565b60006020828403121561129957600080fd5b5051919050565b6000602082840312156112b257600080fd5b81518015158114610d7057600080fd5b60005b838110156112dd5781810151838201526020016112c5565b83811115610de25750506000910152565b600082516113008184602087016112c2565b9190910192915050565b60208152600082518060208401526113298160408501602087016112c2565b601f01601f1916919091016040019291505056fea26469706673582212201915570cb78927cf52019c77e208571b82c3955827d3146b94687a50c4d1485964736f6c634300080f0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x156D CODESIZE SUB DUP1 PUSH3 0x156D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x80 MSTORE DUP3 AND PUSH1 0xA0 MSTORE PUSH3 0x5B DUP2 PUSH3 0x15180 PUSH3 0x142 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH9 0x10000000000000000 MUL PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0xF3 DUP2 PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x106 DUP2 PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x119 DUP2 PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP2 ISZERO ISZERO DUP3 DUP5 DIV DUP3 GT AND ISZERO PUSH3 0x177 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1373 PUSH3 0x1FA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x28C ADD MSTORE DUP2 DUP2 PUSH2 0x3A8 ADD MSTORE DUP2 DUP2 PUSH2 0x639 ADD MSTORE DUP2 DUP2 PUSH2 0x6DA ADD MSTORE DUP2 DUP2 PUSH2 0x887 ADD MSTORE DUP2 DUP2 PUSH2 0xB82 ADD MSTORE PUSH2 0xC5E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1CA ADD MSTORE DUP2 DUP2 PUSH2 0x4B9 ADD MSTORE DUP2 DUP2 PUSH2 0x6B0 ADD MSTORE DUP2 DUP2 PUSH2 0xA38 ADD MSTORE DUP2 DUP2 PUSH2 0xBAC ADD MSTORE DUP2 DUP2 PUSH2 0xBF1 ADD MSTORE PUSH2 0xC2A ADD MSTORE PUSH2 0x1373 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75619AB5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xFE961F61 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x16C621E0 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x13D PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x13D PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x7F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x99C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x13D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x13D PUSH2 0xAE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 PUSH2 0x301 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x3D9 DUP2 PUSH2 0x521 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x40C PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x450 JUMPI PUSH2 0x424 DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4E0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x3D9 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x539 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x57D JUMPI PUSH2 0x551 DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV DUP2 AND SWAP2 AND TIMESTAMP LT PUSH2 0x5D6 JUMPI PUSH2 0x5CE DUP2 DUP5 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x5F1 SWAP1 TIMESTAMP SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x604 SWAP1 DUP4 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x611 DUP3 DUP8 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x717 JUMPI PUSH1 0x5 SLOAD PUSH2 0x714 SWAP1 DUP3 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x721 DUP3 DUP3 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xA4CAEEC2E4C840E8DEDE40D0D2CED PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x79D SWAP1 DUP4 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x817 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x85B JUMPI PUSH2 0x82F DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x8EC JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x8B6 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x8F8 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420746F207A65726F2061646472000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x9C7 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA0B JUMPI PUSH2 0x9DF DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xA60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0xD77 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xCF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xAF4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 PUSH2 0xB0E SWAP1 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xB43 SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB6C SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0xB80 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC1D JUMPI PUSH2 0xC18 CALLER PUSH2 0xBE7 DUP4 DUP6 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xC51 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xD08 JUMPI POP PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD DUP4 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP2 PUSH2 0xD31 SWAP2 TIMESTAMP SWAP2 AND PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xD57 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xDE2 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF0C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x342 SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xE71 DUP3 DUP3 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xE7F DUP3 PUSH2 0xEE0 JUMP JUMPDEST DUP3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xEDB SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xDAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x342 SWAP1 TIMESTAMP SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF05 JUMPI DUP2 PUSH2 0xD70 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF61 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xEDB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFED DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1056 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x111B DUP3 DUP3 DUP7 PUSH2 0x1126 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1135 JUMPI POP DUP2 PUSH2 0xD70 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1145 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x11A1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x11A1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x120A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x11A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x2737BA103234B9BA3934B13ABA37B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652067726561746572207468616E207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDE2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1300 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1329 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT ISZERO JUMPI 0xC 0xB7 DUP10 0x27 0xCF MSTORE ADD SWAP13 PUSH24 0xE208571B82C3955827D3146B94687A50C4D1485964736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "613:6108:6:-:0;;;1086:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:1:4;1860:7;:22;-1:-1:-1;;;;;1190:28:6;;;;;1229:26;;;;1291:17;:8;1302:6;1291:17;:::i;:::-;1266:6;:42;;-1:-1:-1;;;;;1266:42:6;;;;;;-1:-1:-1;;;;;;;;1266:42:6;;;;;;;;;-1:-1:-1;;1319:18:6;:41;;-1:-1:-1;;;;;1319:41:6;;;-1:-1:-1;;;;;;1319:41:6;;;;;;;;;;-1:-1:-1;613:6108:6;;14:131:7;-1:-1:-1;;;;;89:31:7;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:721::-;274:6;282;290;298;351:3;339:9;330:7;326:23;322:33;319:53;;;368:1;365;358:12;319:53;400:9;394:16;419:31;444:5;419:31;:::i;:::-;519:2;504:18;;498:25;469:5;;-1:-1:-1;532:33:7;498:25;532:33;:::i;:::-;636:2;621:18;;615:25;584:7;;-1:-1:-1;649:33:7;615:25;649:33;:::i;:::-;753:2;738:18;;732:25;701:7;;-1:-1:-1;;;;;;788:32:7;;776:45;;766:73;;835:1;832;825:12;766:73;150:721;;;;-1:-1:-1;150:721:7;;-1:-1:-1;;150:721:7:o;876:367::-;915:7;-1:-1:-1;;;;;985:10:7;;;1015;;;1048:11;;1041:19;1070:12;;;1062:21;;1037:47;1034:170;;;1126:10;1121:3;1117:20;1114:1;1107:31;1161:4;1158:1;1151:15;1189:4;1186:1;1179:15;1034:170;1224:13;;876:367;-1:-1:-1;;;;876:367:7:o;:::-;613:6108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_873": {
									"entryPoint": 3852,
									"id": 873,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_630": {
									"entryPoint": 3598,
									"id": 630,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_972": {
									"entryPoint": null,
									"id": 972,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositRewardTokens_1336": {
									"entryPoint": 840,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@earned_1043": {
									"entryPoint": 707,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@exit_1278": {
									"entryPoint": 2789,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_158": {
									"entryPoint": 4085,
									"id": 158,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_88": {
									"entryPoint": 4062,
									"id": 88,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getOwner_984": {
									"entryPoint": null,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardForDuration_1015": {
									"entryPoint": 988,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardForDuration_555": {
									"entryPoint": 3560,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_1178": {
									"entryPoint": 2040,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_499": {
									"entryPoint": 3808,
									"id": 499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_994": {
									"entryPoint": 2460,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_417": {
									"entryPoint": 3830,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@notifyRewardAmount_1452": {
									"entryPoint": 1313,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@rewardPerToken_1005": {
									"entryPoint": 2765,
									"id": 1005,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardPerToken_540": {
									"entryPoint": 3315,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rewardToken_913": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_707": {
									"entryPoint": 3447,
									"id": 707,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_681": {
									"entryPoint": 3755,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setDistributor_1305": {
									"entryPoint": 2298,
									"id": 1305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1091": {
									"entryPoint": 2472,
									"id": 1091,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_910": {
									"entryPoint": null,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAmountStaked_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@updateReward_584": {
									"entryPoint": 3687,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResult_293": {
									"entryPoint": 4390,
									"id": 293,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1135": {
									"entryPoint": 1005,
									"id": 1135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$378__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e6122e9cef92e29307ebf9a5791ef4c764e471047535c7b36898996c869dc49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4802,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6879:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nodeType": "YulIf",
															"src": "94:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:7"
															},
															"nodeType": "YulIf",
															"src": "200:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:286:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:7",
														"type": ""
													}
												],
												"src": "305:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "557:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "578:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "587:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "599:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:32:7"
															},
															"nodeType": "YulIf",
															"src": "567:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "628:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "651:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "638:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "523:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "534:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "546:6:7",
														"type": ""
													}
												],
												"src": "487:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "787:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "797:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "809:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "805:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "797:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "854:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "870:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "875:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "866:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "866:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "879:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "862:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "850:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$378__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "756:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "767:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "778:4:7",
														"type": ""
													}
												],
												"src": "672:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "995:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1005:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1028:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1013:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1005:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1062:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1078:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1083:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1087:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1058:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1058:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1040:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "964:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "975:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "986:4:7",
														"type": ""
													}
												],
												"src": "894:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1134:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1158:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1163:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1191:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1184:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1102:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1283:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1307:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1299:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1302:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:8:7"
															},
															"nodeType": "YulIf",
															"src": "1293:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1351:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1336:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1265:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1268:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1274:4:7",
														"type": ""
													}
												],
												"src": "1234:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1416:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1475:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1477:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1447:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1440:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1440:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1433:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1455:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1466:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1462:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1470:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1458:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1458:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1452:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1429:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:45:7"
															},
															"nodeType": "YulIf",
															"src": "1426:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1506:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1521:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1524:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1506:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1395:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1398:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1404:7:7",
														"type": ""
													}
												],
												"src": "1364:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1614:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1642:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1647:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1628:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1628:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1679:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1682:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1672:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1672:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1672:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1707:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1700:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1700:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1603:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:9:7"
															},
															"nodeType": "YulIf",
															"src": "1593:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1734:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1743:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1734:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1568:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1571:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1577:1:7",
														"type": ""
													}
												],
												"src": "1537:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1807:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1823:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1830:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1820:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:13:7"
															},
															"nodeType": "YulIf",
															"src": "1817:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1876:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1879:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1790:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1793:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1799:3:7",
														"type": ""
													}
												],
												"src": "1759:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2066:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2094:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2076:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2117:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2113:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2167:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:18:7"
																	},
																	{
																		"hexValue": "4e6f74206469737472696275746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2172:17:7",
																		"type": "",
																		"value": "Not distributor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2145:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2199:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2043:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2057:4:7",
														"type": ""
													}
												],
												"src": "1892:339:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2410:175:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2427:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2420:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2420:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2461:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2450:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:7"
																	},
																	{
																		"hexValue": "4d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2516:27:7",
																		"type": "",
																		"value": "Must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2553:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2553:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2387:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2401:4:7",
														"type": ""
													}
												],
												"src": "2236:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2671:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2717:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2726:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2729:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2719:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2719:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2719:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2692:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2701:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:32:7"
															},
															"nodeType": "YulIf",
															"src": "2681:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2742:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2758:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2752:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2637:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2648:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2660:6:7",
														"type": ""
													}
												],
												"src": "2590:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2963:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2963:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2993:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2993:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3039:18:7"
																	},
																	{
																		"hexValue": "52657761726420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3059:17:7",
																		"type": "",
																		"value": "Reward too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3086:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3098:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3086:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2944:4:7",
														"type": ""
													}
												],
												"src": "2779:339:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3297:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3307:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3348:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3359:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3364:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3398:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f742073657420746f207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3403:25:7",
																		"type": "",
																		"value": "Cannot set to zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3438:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3450:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3446:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3438:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e6122e9cef92e29307ebf9a5791ef4c764e471047535c7b36898996c869dc49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3274:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3288:4:7",
														"type": ""
													}
												],
												"src": "3123:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3632:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3642:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3654:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3665:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3650:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3642:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3677:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3695:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3700:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3681:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3722:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3745:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3733:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3715:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3780:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3765:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3789:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3797:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3785:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3758:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3832:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3817:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3837:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3810:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3585:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3596:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3604:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3612:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3623:4:7",
														"type": ""
													}
												],
												"src": "3475:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4029:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4039:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4069:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4069:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4119:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4130:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4115:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4115:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4135:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4108:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4178:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4190:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4201:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4178:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4006:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4020:4:7",
														"type": ""
													}
												],
												"src": "3855:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4366:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4377:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4362:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4354:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4396:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4411:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4427:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4432:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4423:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4423:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4436:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4419:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4389:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4389:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4476:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4305:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4316:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4324:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4335:4:7",
														"type": ""
													}
												],
												"src": "4215:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4618:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4627:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4630:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4620:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4620:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4620:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4593:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4589:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4589:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4614:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4585:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:32:7"
															},
															"nodeType": "YulIf",
															"src": "4582:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4643:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4662:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4656:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4647:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4725:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4734:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4737:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4727:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4727:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4694:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4715:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4708:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4708:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4701:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4701:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4691:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:40:7"
															},
															"nodeType": "YulIf",
															"src": "4681:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4750:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4760:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4538:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4549:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4561:6:7",
														"type": ""
													}
												],
												"src": "4494:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4950:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4960:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4960:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5012:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4997:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5017:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4990:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5036:18:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5056:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5029:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5111:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5122:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5107:18:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5127:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5100:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5100:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5100:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5149:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5161:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5172:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5157:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5149:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4941:4:7",
														"type": ""
													}
												],
												"src": "4776:406:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5361:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5378:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5389:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5371:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5371:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5412:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5408:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5428:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5401:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5401:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5451:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5462:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:18:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5467:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5440:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5440:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5538:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5556:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5556:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5338:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5352:4:7",
														"type": ""
													}
												],
												"src": "5187:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5768:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5785:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5778:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5778:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5819:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5830:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5815:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5815:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5835:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5808:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5858:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5869:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5854:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5874:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5847:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5915:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5927:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5915:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5745:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5759:4:7",
														"type": ""
													}
												],
												"src": "5594:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6005:205:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6015:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6024:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6019:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6084:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6109:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6114:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6105:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6105:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6128:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6133:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6124:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6124:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6118:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6118:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6098:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6098:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6098:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6045:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6042:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6056:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6058:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6067:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6070:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6063:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6063:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6058:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6038:3:7",
																"statements": []
															},
															"src": "6034:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6173:31:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6186:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6191:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6182:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6182:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6200:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6175:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6175:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6175:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6162:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6165:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6159:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:13:7"
															},
															"nodeType": "YulIf",
															"src": "6156:48:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5983:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5988:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5993:6:7",
														"type": ""
													}
												],
												"src": "5952:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6352:137:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6362:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6376:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6366:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6424:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6432:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6439:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6398:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6398:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6460:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6471:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6476:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6467:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6467:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6460:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6328:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6333:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6344:3:7",
														"type": ""
													}
												],
												"src": "6215:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6615:262:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6632:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6643:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6625:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6655:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6675:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6669:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6659:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6702:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6698:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6718:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6691:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6760:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6768:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6756:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6777:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6788:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6773:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6793:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6734:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6734:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6809:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6825:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6844:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6852:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6840:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6840:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6861:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6857:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6857:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6836:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6868:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6817:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6809:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6584:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6606:4:7",
														"type": ""
													}
												],
												"src": "6494:383:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$378__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not distributor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Reward too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e6122e9cef92e29307ebf9a5791ef4c764e471047535c7b36898996c869dc49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot set to zero addr\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"910": [
									{
										"length": 32,
										"start": 458
									},
									{
										"length": 32,
										"start": 1209
									},
									{
										"length": 32,
										"start": 1712
									},
									{
										"length": 32,
										"start": 2616
									},
									{
										"length": 32,
										"start": 2988
									},
									{
										"length": 32,
										"start": 3057
									},
									{
										"length": 32,
										"start": 3114
									}
								],
								"913": [
									{
										"length": 32,
										"start": 652
									},
									{
										"length": 32,
										"start": 936
									},
									{
										"length": 32,
										"start": 1593
									},
									{
										"length": 32,
										"start": 1754
									},
									{
										"length": 32,
										"start": 2183
									},
									{
										"length": 32,
										"start": 2946
									},
									{
										"length": 32,
										"start": 3166
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75619AB5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xFE961F61 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C6B16AB GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x16C621E0 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x13D PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x13D PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x7F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x99C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EC JUMP JUMPDEST PUSH2 0x13D PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x13D PUSH2 0xAE5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x117 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 PUSH2 0x301 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3D0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x3D9 DUP2 PUSH2 0x521 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x40C PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x450 JUMPI PUSH2 0x424 DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4E0 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x3D9 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x539 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x57D JUMPI PUSH2 0x551 DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV DUP2 AND SWAP2 AND TIMESTAMP LT PUSH2 0x5D6 JUMPI PUSH2 0x5CE DUP2 DUP5 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x5F1 SWAP1 TIMESTAMP SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x604 SWAP1 DUP4 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x611 DUP3 DUP8 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x717 JUMPI PUSH1 0x5 SLOAD PUSH2 0x714 SWAP1 DUP3 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x721 DUP3 DUP3 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xA4CAEEC2E4C840E8DEDE40D0D2CED PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x79D SWAP1 DUP4 SWAP1 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x817 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x85B JUMPI PUSH2 0x82F DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x8EC JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x8B6 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x8F8 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420746F207A65726F2061646472000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xE0E JUMP JUMPDEST CALLER PUSH2 0x9C7 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xE67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA0B JUMPI PUSH2 0x9DF DUP2 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xA60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0xD77 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xCF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xAF4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 PUSH2 0xB0E SWAP1 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xB43 SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB6C SWAP1 DUP5 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0xB80 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC1D JUMPI PUSH2 0xC18 CALLER PUSH2 0xBE7 DUP4 DUP6 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xC51 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xD08 JUMPI POP PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD DUP4 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP2 PUSH2 0xD31 SWAP2 TIMESTAMP SWAP2 AND PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xD57 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x120F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xDE2 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF0C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x342 SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xE60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xE71 DUP3 DUP3 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xE7F DUP3 PUSH2 0xEE0 JUMP JUMPDEST DUP3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xEDB SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xDAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x342 SWAP1 TIMESTAMP SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF05 JUMPI DUP2 PUSH2 0xD70 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF61 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xEDB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFED DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1056 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x111B DUP3 DUP3 DUP7 PUSH2 0x1126 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1135 JUMPI POP DUP2 PUSH2 0xD70 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1145 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x11A1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x11A1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x120A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x11A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x2737BA103234B9BA3934B13ABA37B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D7573742062652067726561746572207468616E207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDE2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1300 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1329 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT ISZERO JUMPI 0xC 0xB7 DUP10 0x27 0xCF MSTORE ADD SWAP13 PUSH24 0xE208571B82C3955827D3146B94687A50C4D1485964736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "613:6108:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:237;;;;;;;;;;-1:-1:-1;2174:237:6;;;;;:::i;:::-;;:::i;:::-;;;451:25:7;;;439:2;424:18;2174:237:6;;;;;;;;4567:265;;;;;;:::i;:::-;;:::i;:::-;;2042:124;;;;;;;;;;;;;:::i;2825:338::-;;;;;;:::i;:::-;;:::i;4840:908::-;;;;;;:::i;:::-;;:::i;3171:325::-;;;:::i;1528:117::-;;;;;;;;;;-1:-1:-1;1528:117:6;;;;;:::i;:::-;-1:-1:-1;;;;;1619:18:6;1587:7;1619:18;;;:9;:18;;;;;;;1528:117;999:36;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;850:32:7;;;832:51;;820:2;805:18;999:36:6;672:217:7;4335:224:6;;;;;;:::i;:::-;;:::i;1771:132::-;;;;;;;;;;;;;:::i;1653:110::-;;;;;;;;;;-1:-1:-1;1736:18:6;;-1:-1:-1;;;;;1736:18:6;1653:110;;2464:353;;;;;;:::i;:::-;;:::i;1911:123::-;;;;;;;;;;;;;:::i;3504:780::-;;;:::i;1042:35::-;;;;;;;;;;;;;;;1417:103;;;;;;;;;;-1:-1:-1;1501:11:6;;1417:103;;2174:237;-1:-1:-1;;;;;2386:17:6;;2228:7;2386:17;;;:8;:17;;;;;;;;;2333:23;:32;;;;;;2318:11;;2379:4;;2333:32;2296:34;;:6;;:21;:34::i;:::-;:69;;;;:::i;:::-;-1:-1:-1;;;;;2260:18:6;;;;;;:9;:18;;;;;;:116;;;;:::i;:::-;:123;;;;:::i;:::-;:143;;;;:::i;:::-;2253:150;2174:237;-1:-1:-1;;2174:237:6:o;4567:265::-;6334:18;;-1:-1:-1;;;;;6334:18:6;6312:10;:41;6304:69;;;;-1:-1:-1;;;6304:69:6;;;;;;;:::i;:::-;;;;;;;;;4678:1:::1;4669:6;:10;4661:48;;;;-1:-1:-1::0;;;4661:48:6::1;;;;;;;:::i;:::-;4722:63;-1:-1:-1::0;;;;;4722:11:6::1;:28;4751:10;4771:4;4778:6:::0;4722:28:::1;:63::i;:::-;4798:26;4817:6;4798:18;:26::i;:::-;4567:265:::0;:::o;2042:124::-;2097:7;2129:29;:6;:27;:29::i;:::-;2122:36;;2042:124;:::o;2825:338::-;2311:21:4;:19;:21::i;:::-;2900:10:6::1;5851:32;5871:11;;5851:6;:19;;:32;;;;:::i;:::-;-1:-1:-1::0;;;;;5900:21:6;::::1;::::0;5896:166:::1;;5958:15;5965:7;5958:6;:15::i;:::-;-1:-1:-1::0;;;;;5938:17:6;::::1;;::::0;;;:8:::1;:17;::::0;;;;;;;:35;;;;6023:27;;5988:23:::1;:32:::0;;;;;;:62;5896:166:::1;2945:1:::2;2936:6;:10;2928:48;;;;-1:-1:-1::0;;;2928:48:6::2;;;;;;;:::i;:::-;3004:6;2989:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3031:10:6::2;3021:21;::::0;;;:9:::2;:21;::::0;;;;:31;;3046:6;;3021:21;:31:::2;::::0;3046:6;;3021:31:::2;:::i;:::-;::::0;;;-1:-1:-1;3063:45:6::2;::::0;-1:-1:-1;;;;;;3063:12:6::2;:25;3089:10;3101:6:::0;3063:25:::2;:45::i;:::-;3126:29;::::0;451:25:7;;;3136:10:6::2;::::0;3126:29:::2;::::0;439:2:7;424:18;3126:29:6::2;;;;;;;;2343:1:4::1;2355:20:::0;1749:1;2875:7;:22;2692:213;4840:908:6;4920:1;5851:32;5871:11;;5851:6;:19;;:32;;;;:::i;:::-;-1:-1:-1;;;;;5900:21:6;;;5896:166;;5958:15;5965:7;5958:6;:15::i;:::-;-1:-1:-1;;;;;5938:17:6;;;;;;:8;:17;;;;;;;;:35;;;;6023:27;;5988:23;:32;;;;;;:62;5896:166;6334:18;;-1:-1:-1;;;;;6334:18:6::1;6312:10;:41;6304:69;;;;-1:-1:-1::0;;;6304:69:6::1;;;;;;;:::i;:::-;4975:6:::2;:22:::0;::::2;-1:-1:-1::0;;;4975:22:6;::::2;::::0;::::2;::::0;5033:19:::2;5014:15;:38;5010:326;;5089:17;5098:8:::0;5089:6;:17:::2;:::i;:::-;5069::::0;:37;5010:326:::2;;;5159:6;:19:::0;5139:17:::2;::::0;5159:37:::2;::::0;5181:15:::2;::::0;5159:19:::2;;:37;:::i;:::-;5242:17:::0;;5139:57;;-1:-1:-1;5211:16:6::2;::::0;5230:29:::2;::::0;5139:57;5230:29:::2;:::i;:::-;5211:48:::0;-1:-1:-1;5316:8:6;5295:17:::2;5211:48:::0;5295:6;:17:::2;:::i;:::-;5294:30;;;;:::i;:::-;5274:17:::0;:50;-1:-1:-1;;5010:326:6::2;5366:36;::::0;-1:-1:-1;;;5366:36:6;;5396:4:::2;5366:36;::::0;::::2;832:51:7::0;5348:15:6::2;::::0;5366:11:::2;-1:-1:-1::0;;;;;5366:21:6::2;::::0;::::2;::::0;805:18:7;;5366:36:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5348:54;;5434:12;-1:-1:-1::0;;;;;5419:27:6::2;:11;-1:-1:-1::0;;;;;5419:27:6::2;::::0;5415:82:::2;;5474:11;::::0;5463:22:::2;::::0;;::::2;:::i;:::-;;;5415:82;5538:18;5548:8:::0;5538:7;:18:::2;:::i;:::-;5517:17:::0;;:39:::2;;5509:67;;;::::0;-1:-1:-1;;;5509:67:6;;2981:2:7;5509:67:6::2;::::0;::::2;2963:21:7::0;3020:2;3000:18;;;2993:30;-1:-1:-1;;;3039:18:7;;;3032:45;3094:18;;5509:67:6::2;2779:339:7::0;5509:67:6::2;5589:6;:47:::0;;::::2;5620:15;5589:47:::0;;::::2;-1:-1:-1::0;;;5589:47:6::2;-1:-1:-1::0;;;;5589:47:6;;::::2;::::0;;;::::2;::::0;;;5676:26:::2;::::0;5694:8;;5676:26:::2;:::i;:::-;5647:6;:56:::0;;-1:-1:-1;;5647:56:6::2;;::::0;;;::::2;::::0;;;::::2;::::0;;5721:19:::2;::::0;451:25:7;;;5721:19:6::2;::::0;439:2:7;424:18;5721:19:6::2;;;;;;;4945:803;;4840:908:::0;;:::o;3171:325::-;2311:21:4;:19;:21::i;:::-;3233:10:6::1;5851:32;5871:11;;5851:6;:19;;:32;;;;:::i;:::-;-1:-1:-1::0;;;;;5900:21:6;::::1;::::0;5896:166:::1;;5958:15;5965:7;5958:6;:15::i;:::-;-1:-1:-1::0;;;;;5938:17:6;::::1;;::::0;;;:8:::1;:17;::::0;;;;;;;:35;;;;6023:27;;5988:23:::1;:32:::0;;;;;;:62;5896:166:::1;3287:10:::2;3261:14;3278:20:::0;;;:8:::2;:20;::::0;;;;;3315:10;;3311:178:::2;;3351:10;3365:1;3342:20:::0;;;:8:::2;:20;::::0;;;;:24;3381:44:::2;::::0;:11:::2;-1:-1:-1::0;;;;;3381:24:6::2;::::0;3418:6;3381:24:::2;:44::i;:::-;3447:30;::::0;451:25:7;;;3458:10:6::2;::::0;3447:30:::2;::::0;439:2:7;424:18;3447:30:6::2;;;;;;;3311:178;3250:246;2343:1:4::1;2355:20:::0;1749:1;2875:7;:22;2692:213;2355:20;3171:325:6:o;4335:224::-;6334:18;;-1:-1:-1;;;;;6334:18:6;6312:10;:41;6304:69;;;;-1:-1:-1;;;6304:69:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;4440:28:6;::::1;4432:64;;;::::0;-1:-1:-1;;;4432:64:6;;3325:2:7;4432:64:6::1;::::0;::::1;3307:21:7::0;3364:2;3344:18;;;3337:30;3403:25;3383:18;;;3376:53;3446:18;;4432:64:6::1;3123:347:7::0;4432:64:6::1;4507:18:::0;:44;;-1:-1:-1;;;;;;4507:44:6::1;-1:-1:-1::0;;;;;4507:44:6;;;::::1;::::0;;;::::1;::::0;;4335:224::o;1771:132::-;1830:7;1862:33;:6;:31;:33::i;2464:353::-;2311:21:4;:19;:21::i;:::-;2538:10:6::1;5851:32;5871:11;;5851:6;:19;;:32;;;;:::i;:::-;-1:-1:-1::0;;;;;5900:21:6;::::1;::::0;5896:166:::1;;5958:15;5965:7;5958:6;:15::i;:::-;-1:-1:-1::0;;;;;5938:17:6;::::1;;::::0;;;:8:::1;:17;::::0;;;;;;;:35;;;;6023:27;;5988:23:::1;:32:::0;;;;;;:62;5896:166:::1;2583:1:::2;2574:6;:10;2566:48;;;;-1:-1:-1::0;;;2566:48:6::2;;;;;;;:::i;:::-;2627:64;-1:-1:-1::0;;;;;2627:12:6::2;:29;2657:10;2677:4;2684:6:::0;2627:29:::2;:64::i;:::-;2717:6;2702:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2744:10:6::2;2734:21;::::0;;;:9:::2;:21;::::0;;;;:31;;2759:6;;2734:21;:31:::2;::::0;2759:6;;2734:31:::2;:::i;:::-;::::0;;;-1:-1:-1;;2783:26:6::2;::::0;451:25:7;;;2790:10:6::2;::::0;2783:26:::2;::::0;439:2:7;424:18;2783:26:6::2;305:177:7::0;1911:123:6;1960:7;1992:34;2014:11;;1992:6;:21;;:34;;;;:::i;3504:780::-;3573:11;;3553:32;;:6;;:19;:32::i;:::-;3626:10;3598:15;3616:21;;;:9;:21;;;;;;;3665:18;;:6;:18::i;:::-;3734:27;;3720:10;3696:35;;;;:23;:35;;;;;;;;:65;;;;3772:9;:21;;;;;:32;;3648:35;;-1:-1:-1;3797:7:6;;3772:21;;3696:35;3772:32;;3797:7;;3772:32;:::i;:::-;;;;-1:-1:-1;;3824:10:6;3838:1;3815:20;;;:8;:20;;;;;:24;;;3850:11;:22;;3865:7;;3838:1;3850:22;;3865:7;;3850:22;:::i;:::-;;;;-1:-1:-1;;3905:11:6;;3885:32;;:6;;:19;:32::i;:::-;3950:11;-1:-1:-1;;;;;3934:27:6;:12;-1:-1:-1;;;;;3934:27:6;;3930:253;;3978:55;4004:10;4016:16;4026:6;4016:7;:16;:::i;:::-;-1:-1:-1;;;;;3978:12:6;:25;;:55;:25;:55::i;:::-;3930:253;;;4066:46;-1:-1:-1;;;;;4066:12:6;:25;4092:10;4104:7;4066:25;:46::i;:::-;4127:44;-1:-1:-1;;;;;4127:11:6;:24;4152:10;4164:6;4127:24;:44::i;:::-;4200:30;;451:25:7;;;4210:10:6;;4200:30;;439:2:7;424:18;4200:30:6;;;;;;;4246;;451:25:7;;;4257:10:6;;4246:30;;439:2:7;424:18;4246:30:6;;;;;;;3542:742;;3504:780::o;541:366:3:-;634:7;663:11;678:1;663:16;659:55;;-1:-1:-1;688:26:3;;;;681:33;;659:55;851:16;;;;827:20;;877:11;;851:16;827:20;-1:-1:-1;;;827:20:3;;;;;779:45;;788:15;;805:18;779:8;:45::i;:::-;:68;;;;:::i;:::-;778:89;;;;:::i;:::-;:96;;870:4;778:96;:::i;:::-;:110;;;;:::i;:::-;734:5;:26;;;:165;;;;:::i;:::-;727:172;541:366;-1:-1:-1;;;541:366:3:o;926:248:5:-;1097:68;;-1:-1:-1;;;;;3733:15:7;;;1097:68:5;;;3715:34:7;3785:15;;3765:18;;;3758:43;3817:18;;;3810:34;;;1070:96:5;;1090:5;;-1:-1:-1;;;1120:27:5;3650:18:7;;1097:68:5;;;;-1:-1:-1;;1097:68:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1097:68:5;-1:-1:-1;;;;;;1097:68:5;;;;;;;;;;1070:19;:96::i;:::-;926:248;;;;:::o;915:158:3:-;1044:21;;1025:16;;;;993:7;;1025:40;;-1:-1:-1;;;1044:21:3;;;;;;1025:40;:::i;2391:293:4:-;1793:1;2525:7;;:19;2517:63;;;;-1:-1:-1;;;2517:63:4;;4057:2:7;2517:63:4;;;4039:21:7;4096:2;4076:18;;;4069:30;4135:33;4115:18;;;4108:61;4186:18;;2517:63:4;3855:355:7;2517:63:4;1793:1;2658:7;:18;2391:293::o;1081:227:3:-;1198:29;1213:5;1220:6;1198:14;:29::i;:::-;1169:26;;;:58;1268:31;1169:5;1268:24;:31::i;:::-;1238:62;;;;;;;-1:-1:-1;;;1238:62:3;-1:-1:-1;;;;1238:62:3;;;;;;;-1:-1:-1;1081:227:3:o;707:211:5:-;851:58;;-1:-1:-1;;;;;4407:32:7;;851:58:5;;;4389:51:7;4456:18;;;4449:34;;;824:86:5;;844:5;;-1:-1:-1;;;874:23:5;4362:18:7;;851:58:5;4215:274:7;824:86:5;707:211;;;:::o;366:167:3:-;506:18;;448:7;;480:45;;489:15;;506:18;;465:106:2;523:7;554:1;550;:5;:13;;562:1;550:13;;;-1:-1:-1;558:1:2;;465:106;-1:-1:-1;465:106:2:o;3280:716:5:-;3704:23;3730:69;3758:4;3730:69;;;;;;;;;;;;;;;;;3738:5;-1:-1:-1;;;;;3730:27:5;;;:69;;;;;:::i;:::-;3814:17;;3704:95;;-1:-1:-1;3814:21:5;3810:179;;3911:10;3900:30;;;;;;;;;;;;:::i;:::-;3892:85;;;;-1:-1:-1;;;3892:85:5;;4978:2:7;3892:85:5;;;4960:21:7;5017:2;4997:18;;;4990:30;5056:34;5036:18;;;5029:62;-1:-1:-1;;;5107:18:7;;;5100:40;5157:19;;3892:85:5;4776:406:7;3940:229:0;4077:12;4109:52;4131:6;4139:4;4145:1;4148:12;4109:21;:52::i;:::-;4102:59;3940:229;-1:-1:-1;;;;3940:229:0:o;5060:510::-;5230:12;5288:5;5263:21;:30;;5255:81;;;;-1:-1:-1;;;5255:81:0;;5389:2:7;5255:81:0;;;5371:21:7;5428:2;5408:18;;;5401:30;5467:34;5447:18;;;5440:62;-1:-1:-1;;;5518:18:7;;;5511:36;5564:19;;5255:81:0;5187:402:7;5255:81:0;-1:-1:-1;;;;;1490:19:0;;;5347:60;;;;-1:-1:-1;;;5347:60:0;;5796:2:7;5347:60:0;;;5778:21:7;5835:2;5815:18;;;5808:30;5874:31;5854:18;;;5847:59;5923:18;;5347:60:0;5594:353:7;5347:60:0;5421:12;5435:23;5462:6;-1:-1:-1;;;;;5462:11:0;5481:5;5488:4;5462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5420:73;;;;5511:51;5528:7;5537:10;5549:12;5511:16;:51::i;:::-;5504:58;5060:510;-1:-1:-1;;;;;;;5060:510:0:o;7746:712::-;7896:12;7925:7;7921:530;;;-1:-1:-1;7956:10:0;7949:17;;7921:530;8070:17;;:21;8066:374;;8268:10;8262:17;8329:15;8316:10;8312:2;8308:19;8301:44;8066:374;8411:12;8404:20;;-1:-1:-1;;;8404:20:0;;;;;;;;:::i;14:286:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:7;;210:42;;200:70;;266:1;263;256:12;487:180;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:7;;487:180;-1:-1:-1;487:180:7:o;1102:127::-;1163:10;1158:3;1154:20;1151:1;1144:31;1194:4;1191:1;1184:15;1218:4;1215:1;1208:15;1234:125;1274:4;1302:1;1299;1296:8;1293:34;;;1307:18;;:::i;:::-;-1:-1:-1;1344:9:7;;1234:125::o;1364:168::-;1404:7;1470:1;1466;1462:6;1458:14;1455:1;1452:21;1447:1;1440:9;1433:17;1429:45;1426:71;;;1477:18;;:::i;:::-;-1:-1:-1;1517:9:7;;1364:168::o;1537:217::-;1577:1;1603;1593:132;;1647:10;1642:3;1638:20;1635:1;1628:31;1682:4;1679:1;1672:15;1710:4;1707:1;1700:15;1593:132;-1:-1:-1;1739:9:7;;1537:217::o;1759:128::-;1799:3;1830:1;1826:6;1823:1;1820:13;1817:39;;;1836:18;;:::i;:::-;-1:-1:-1;1872:9:7;;1759:128::o;1892:339::-;2094:2;2076:21;;;2133:2;2113:18;;;2106:30;-1:-1:-1;;;2167:2:7;2152:18;;2145:45;2222:2;2207:18;;1892:339::o;2236:349::-;2438:2;2420:21;;;2477:2;2457:18;;;2450:30;2516:27;2511:2;2496:18;;2489:55;2576:2;2561:18;;2236:349::o;2590:184::-;2660:6;2713:2;2701:9;2692:7;2688:23;2684:32;2681:52;;;2729:1;2726;2719:12;2681:52;-1:-1:-1;2752:16:7;;2590:184;-1:-1:-1;2590:184:7:o;4494:277::-;4561:6;4614:2;4602:9;4593:7;4589:23;4585:32;4582:52;;;4630:1;4627;4620:12;4582:52;4662:9;4656:16;4715:5;4708:13;4701:21;4694:5;4691:32;4681:60;;4737:1;4734;4727:12;5952:258;6024:1;6034:113;6048:6;6045:1;6042:13;6034:113;;;6124:11;;;6118:18;6105:11;;;6098:39;6070:2;6063:10;6034:113;;;6165:6;6162:1;6159:13;6156:48;;;-1:-1:-1;;6200:1:7;6182:16;;6175:27;5952:258::o;6215:274::-;6344:3;6382:6;6376:13;6398:53;6444:6;6439:3;6432:4;6424:6;6420:17;6398:53;:::i;:::-;6467:16;;;;;6215:274;-1:-1:-1;;6215:274:7:o;6494:383::-;6643:2;6632:9;6625:21;6606:4;6675:6;6669:13;6718:6;6713:2;6702:9;6698:18;6691:34;6734:66;6793:6;6788:2;6777:9;6773:18;6768:2;6760:6;6756:15;6734:66;:::i;:::-;6861:2;6840:15;-1:-1:-1;;6836:29:7;6821:45;;;;6868:2;6817:54;;6494:383;-1:-1:-1;;6494:383:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "995800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2558",
								"depositRewardTokens(uint256)": "infinite",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getOwner()": "2398",
								"getReward()": "infinite",
								"getRewardForDuration()": "4642",
								"lastTimeRewardApplicable()": "2471",
								"notifyRewardAmount(uint256)": "infinite",
								"rewardPerToken()": "infinite",
								"rewardToken()": "infinite",
								"setDistributor(address)": "26710",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalAmountStaked()": "2369",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1086,
									"end": 1368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1086,
									"end": 1368,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1860,
									"end": 1867,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1860,
									"end": 1882,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1218,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1218,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1218,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1218,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1190,
									"end": 1218,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1255,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1229,
									"end": 1255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1291,
									"end": 1299,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "15180"
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1291,
									"end": 1308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "10000000000000000"
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1308,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1360,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 274,
									"end": 280,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 288,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 296,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 304,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 351,
									"end": 354,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 339,
									"end": 348,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 330,
									"end": 337,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 326,
									"end": 349,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 322,
									"end": 355,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 319,
									"end": 372,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 319,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 319,
									"end": 372,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 358,
									"end": 370,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 319,
									"end": 372,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 319,
									"end": 372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 400,
									"end": 409,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 394,
									"end": 410,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 419,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 444,
									"end": 449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 419,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 419,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 419,
									"end": 450,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 419,
									"end": 450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 519,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 504,
									"end": 522,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 504,
									"end": 522,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 498,
									"end": 523,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 469,
									"end": 474,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 469,
									"end": 474,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 532,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 498,
									"end": 523,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 532,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 532,
									"end": 565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 565,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 636,
									"end": 638,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 639,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 621,
									"end": 639,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 615,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 584,
									"end": 591,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 584,
									"end": 591,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 615,
									"end": 640,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 755,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 738,
									"end": 756,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 738,
									"end": 756,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 732,
									"end": 757,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 708,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 701,
									"end": 708,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 788,
									"end": 820,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 788,
									"end": 820,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 776,
									"end": 821,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 776,
									"end": 821,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 766,
									"end": 839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 766,
									"end": 839,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 835,
									"end": 836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 833,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 825,
									"end": 837,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 766,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 766,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 150,
									"end": 871,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 150,
									"end": 871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 876,
									"end": 1243,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 876,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 985,
									"end": 995,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 985,
									"end": 995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 985,
									"end": 995,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1059,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1059,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1060,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1083,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1083,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1037,
									"end": 1084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1034,
									"end": 1204,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1034,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1034,
									"end": 1204,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1121,
									"end": 1124,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1117,
									"end": 1137,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1114,
									"end": 1115,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1138,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1165,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1151,
									"end": 1166,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1189,
									"end": 1193,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1179,
									"end": 1194,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1034,
									"end": 1204,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1034,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1224,
									"end": 1237,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1224,
									"end": 1237,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 876,
									"end": 1243,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 876,
									"end": 1243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 876,
									"end": 1243,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 876,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "913"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "910"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 6721,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201915570cb78927cf52019c77e208571b82c3955827d3146b94687a50c4d1485964736f6c634300080f0033",
									".code": [
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "75619AB5"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "CD3DAF9D"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "CD3DAF9D"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "E9FAD8EE"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "FE961F61"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "75619AB5"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "80FAA57D"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "893D20E8"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "A694FC3A"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "3C6B16AB"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "3C6B16AB"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "3D18B912"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "72F702F3"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "8CC262"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "16C621E0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "1C1F78EB"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 613,
											"end": 6721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2174,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2174,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4567,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4567,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2042,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2825,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2825,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4840,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4840,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3171,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 850,
											"end": 882,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 832,
											"end": 883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 832,
											"end": 883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 672,
											"end": 889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4335,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4335,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1771,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1653,
											"end": 1763,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2464,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2464,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1911,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3504,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1077,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1417,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2318,
											"end": 2329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2383,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2379,
											"end": 2383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2296,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2296,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2296,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2260,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2260,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2260,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2260,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2260,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2260,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6322,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6304,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4679,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4661,
											"end": 4709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4661,
											"end": 4709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4722,
											"end": 4733,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": 4722,
											"end": 4750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4761,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4722,
											"end": 4785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4722,
											"end": 4785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4817,
											"end": 4823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4798,
											"end": 4824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4798,
											"end": 4824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2129,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2129,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2825,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2311,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2910,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5965,
											"end": 5972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5958,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2942,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2946,
											"modifierDepth": 2,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2928,
											"end": 2976,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2928,
											"end": 2976,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3010,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2989,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2989,
											"end": 3010,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2989,
											"end": 3010,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3041,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3021,
											"end": 3042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3021,
											"end": 3052,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3021,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3052,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3108,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3063,
											"end": 3108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3075,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": 3063,
											"end": 3088,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3099,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3088,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3063,
											"end": 3108,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3108,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3063,
											"end": 3108,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3155,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3146,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3126,
											"end": 3155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3155,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2905,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5871,
											"end": 5882,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5871,
											"end": 5882,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5851,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5851,
											"end": 5870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5851,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5896,
											"end": 6062,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5965,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5958,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6011,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5896,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6334,
											"end": 6352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6322,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6353,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6304,
											"end": 6373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6304,
											"end": 6373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4981,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4997,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4997,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5052,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5029,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"modifierDepth": 2,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5098,
											"end": 5106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5089,
											"end": 5106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5089,
											"end": 5106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5069,
											"end": 5106,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5159,
											"end": 5178,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5159,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5178,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5159,
											"end": 5196,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5196,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5159,
											"end": 5196,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5259,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5242,
											"end": 5259,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5230,
											"end": 5259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5230,
											"end": 5259,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5259,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5230,
											"end": 5259,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5316,
											"end": 5324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5312,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5211,
											"end": 5259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5312,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5295,
											"end": 5312,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5312,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5295,
											"end": 5312,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5294,
											"end": 5324,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5294,
											"end": 5324,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5274,
											"end": 5324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5010,
											"end": 5336,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5400,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 832,
											"end": 883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5387,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5387,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5366,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 823,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5366,
											"end": 5402,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5366,
											"end": 5402,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5402,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5402,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5419,
											"end": 5446,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5430,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5419,
											"end": 5446,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5446,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5497,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5415,
											"end": 5497,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5474,
											"end": 5485,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5463,
											"end": 5485,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5485,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5497,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5415,
											"end": 5497,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5548,
											"end": 5556,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5538,
											"end": 5556,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5556,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5538,
											"end": 5556,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5534,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5517,
											"end": 5534,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5556,
											"modifierDepth": 2,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5556,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5509,
											"end": 5576,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5509,
											"end": 5576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5509,
											"end": 5576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A4CAEEC2E4C840E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3032,
											"end": 3077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2779,
											"end": 3118,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5509,
											"end": 5576,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5635,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5636,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5636,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5702,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5676,
											"end": 5702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5702,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5676,
											"end": 5702,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5702,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5676,
											"end": 5702,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5647,
											"end": 5703,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5703,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 5721,
											"end": 5740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5740,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 5748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 5748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3171,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2311,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3243,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5965,
											"end": 5972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5958,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3297,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3278,
											"end": 3298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3298,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3311,
											"end": 3489,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3361,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3342,
											"end": 3362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3366,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3381,
											"end": 3425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3392,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3381,
											"end": 3405,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3381,
											"end": 3425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3381,
											"end": 3425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3477,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3468,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3447,
											"end": 3477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3477,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3489,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3311,
											"end": 3489,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3496,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2905,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2355,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4335,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6322,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6304,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6304,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4440,
											"end": 4468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4496,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4432,
											"end": 4496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4432,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F742073657420746F207A65726F2061646472000000000000000000"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3429,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3123,
											"end": 3470,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4432,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4525,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4551,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1771,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1862,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1862,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2464,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2311,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2311,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2548,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5871,
											"end": 5882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5851,
											"end": 5870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5851,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5965,
											"end": 5972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5958,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5958,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5938,
											"end": 5955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5973,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6020,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6050,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5896,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2580,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2584,
											"modifierDepth": 2,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2566,
											"end": 2614,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2566,
											"end": 2614,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2691,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2639,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": 2627,
											"end": 2656,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2667,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2681,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2656,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2627,
											"end": 2691,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2691,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2627,
											"end": 2691,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2723,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2702,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2702,
											"end": 2723,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2702,
											"end": 2723,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2754,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2734,
											"end": 2755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2734,
											"end": 2765,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2734,
											"end": 2765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2765,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2800,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2809,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1911,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1992,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1992,
											"end": 2013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1992,
											"end": 2026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3504,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3584,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3573,
											"end": 3584,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3553,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3626,
											"end": 3636,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3665,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3761,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3734,
											"end": 3761,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3730,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3719,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3761,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3761,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3761,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3683,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3772,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3824,
											"end": 3834,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3839,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3861,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3850,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3916,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3905,
											"end": 3916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3885,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3961,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3946,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4016,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4032,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4016,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": 3978,
											"end": 4003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3978,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4033,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3978,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3930,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4078,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "910"
										},
										{
											"begin": 4066,
											"end": 4091,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4102,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4111,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4066,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4066,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4127,
											"end": 4138,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "913"
										},
										{
											"begin": 4127,
											"end": 4151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4162,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4127,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4171,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4127,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "PUSH",
											"source": 6,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4267,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4276,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 4284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 541,
											"end": 907,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 541,
											"end": 907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 679,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 688,
											"end": 714,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 688,
											"end": 714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 688,
											"end": 714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 688,
											"end": 714,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 681,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 681,
											"end": 714,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 851,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 851,
											"end": 867,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 851,
											"end": 867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 867,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 827,
											"end": 847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 827,
											"end": 847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 803,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 779,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 779,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 779,
											"end": 824,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 779,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 779,
											"end": 847,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 779,
											"end": 847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 779,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 779,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 779,
											"end": 847,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 779,
											"end": 847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 778,
											"end": 867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 778,
											"end": 867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 778,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 778,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 778,
											"end": 867,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 778,
											"end": 867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 778,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 778,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 778,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 778,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 778,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 778,
											"end": 888,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 778,
											"end": 888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 778,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 778,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 778,
											"end": 888,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 778,
											"end": 888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 734,
											"end": 760,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 734,
											"end": 760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 760,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 734,
											"end": 899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 734,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 734,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 734,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 727,
											"end": 899,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 541,
											"end": 907,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 541,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3748,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3748,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3844,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1070,
											"end": 1166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1070,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1166,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1070,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 915,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 915,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1041,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1025,
											"end": 1041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1041,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1025,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1025,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2684,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2391,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4168,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3855,
											"end": 4210,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2517,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1081,
											"end": 1308,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1081,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1198,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1227,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1268,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1299,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1268,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1300,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1081,
											"end": 1308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 707,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 707,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4439,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4483,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 824,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 824,
											"end": 910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4215,
											"end": 4489,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 824,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 824,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 707,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 707,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 366,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 506,
											"end": 524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 506,
											"end": 524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 480,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 480,
											"end": 525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 489,
											"end": 504,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 506,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 465,
											"end": 571,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 465,
											"end": 571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 523,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 550,
											"end": 555,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 562,
											"end": 563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 563,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 550,
											"end": 563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 558,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 558,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 465,
											"end": 571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3996,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3280,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3900,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4981,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5090,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5029,
											"end": 5091,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5176,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5157,
											"end": 5176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4776,
											"end": 5182,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3940,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4089,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4109,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 4109,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4109,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4161,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 4169,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3940,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5570,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5060,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5230,
											"end": 5242,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5288,
											"end": 5293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5284,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5467,
											"end": 5501,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5583,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5564,
											"end": 5583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5187,
											"end": 5589,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5255,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1509,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1509,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5905,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5594,
											"end": 5947,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5347,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5486,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5462,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5462,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 5528,
											"end": 5535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5511,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5511,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 5511,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5504,
											"end": 5562,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5570,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5060,
											"end": 5570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 8458,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 7746,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7896,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7925,
											"end": 7932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 7921,
											"end": 8451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7956,
											"end": 7966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7949,
											"end": 7966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8451,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 7921,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8066,
											"end": 8440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8262,
											"end": 8279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8326,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8308,
											"end": 8327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8440,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8066,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8404,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 487,
											"end": 667,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 574,
											"end": 597,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 570,
											"end": 602,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 661,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 638,
											"end": 661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1102,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1158,
											"end": 1161,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1175,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1222,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1223,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1359,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1234,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1304,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1327,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1293,
											"end": 1327,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1307,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1532,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1364,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1468,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1474,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1497,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1426,
											"end": 1497,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1477,
											"end": 1495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1754,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1537,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1593,
											"end": 1725,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1642,
											"end": 1645,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1714,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1715,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1725,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1593,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1887,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1759,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1856,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1817,
											"end": 1856,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1836,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 2231,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1892,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103234B9BA3934B13ABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2167,
											"end": 2169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 2231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2585,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2236,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2543,
											"name": "PUSH",
											"source": 7,
											"value": "4D7573742062652067726561746572207468616E207A65726F00000000000000"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2774,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2590,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2711,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2716,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2733,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2681,
											"end": 2733,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2733,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2681,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4771,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4494,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4612,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4617,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4582,
											"end": 4634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4634,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4582,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4662,
											"end": 4671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4672,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4691,
											"end": 4723,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4681,
											"end": 4741,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4739,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 6210,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5952,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6048,
											"end": 6054,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6055,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6098,
											"end": 6137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6034,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6172,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6156,
											"end": 6204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6156,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6156,
											"end": 6204,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 6210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6215,
											"end": 6489,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6215,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6344,
											"end": 6347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6424,
											"end": 6430,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6398,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6451,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6398,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6215,
											"end": 6489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6877,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 6494,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6682,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6713,
											"end": 6715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6702,
											"end": 6711,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6793,
											"end": 6799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6786,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6766,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6734,
											"end": 6800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6800,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6734,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6870,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6494,
											"end": 6877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/Staking_dApp/Address.sol",
								"contracts/Staking_dApp/IERC20.sol",
								"contracts/Staking_dApp/Math.sol",
								"contracts/Staking_dApp/PoolManager.sol",
								"contracts/Staking_dApp/ReentrancyGuard.sol",
								"contracts/Staking_dApp/SafeERC20.sol",
								"contracts/Staking_dApp/StakeBoredom.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"depositRewardTokens(uint256)": "16c621e0",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getOwner()": "893d20e8",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"rewardPerToken()": "cd3daf9d",
							"rewardToken()": "f7c618c1",
							"setDistributor(address)": "75619ab5",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalAmountStaked()": "fe961f61",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"stakingToken_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken_\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"duration\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"setDistributor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmountStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_dApp/StakeBoredom.sol\":\"StakeBoredom\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking_dApp/Address.sol\":{\"keccak256\":\"0xe57c68ef15a800ed8276055bfa234fb62c4939afee71e63baa35f19b2586edfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e988cf63a930e07ad1b55c109347b588dfbd28bd79f23e8f7162901d8f276b5\",\"dweb:/ipfs/QmZd4D7me8qDHWXhm4NKYFjzQ4bGcC8b4WhPr9B4Rsv6jv\"]},\"contracts/Staking_dApp/IERC20.sol\":{\"keccak256\":\"0xfeb956216c4aad982187d5f3800c72934e5f5d9d3b6d4d09a583e9a60bc02b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0101a3437b16cf61c1ace759d837968daa5b9b8bb4a089ab0bd83c878a5da08\",\"dweb:/ipfs/QmWvQnZjh7ZChr3F5LS9DAwbjE6djg4uD8gJTnHbVPP2qH\"]},\"contracts/Staking_dApp/Math.sol\":{\"keccak256\":\"0x03a29ae9391115dfb7f77574ebae7cc465c18df15f6932339240f4c533bdac2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65f7b09ab3f25fa768acce4f3c7da29cf93a3960e11f90fd0e11c82bc98b22d7\",\"dweb:/ipfs/QmUG8ixyW42gk53tSMnzgH1NkoUJLR263R8v3ecLKwHhMx\"]},\"contracts/Staking_dApp/PoolManager.sol\":{\"keccak256\":\"0xb1fe3f9acc8634e53b1fcdd6cf5b713ac4d1ad71b07540fc3a19a654e768ced5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33c75180760c863bffe0967f9cfe58cff49cbba83c32f08431f4e288b3ace91c\",\"dweb:/ipfs/QmZoaQnhpsQB765dHvJkqNMoukjzr8h7NbMtAT76i9sRiX\"]},\"contracts/Staking_dApp/ReentrancyGuard.sol\":{\"keccak256\":\"0xcc31a6aaa033d766177292c4a614746a52ad143a8c2f5793d6617c4ea49a8764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c65d38db424fd569f7546cfc91bb2492adda8562eb76babedf557979fb4c86e\",\"dweb:/ipfs/QmVvFH7yNSR7XL2BhoUTBJXXwtLCasDWehMcVSSoBYo2AB\"]},\"contracts/Staking_dApp/SafeERC20.sol\":{\"keccak256\":\"0xe7ea939e4d2b9be8696581da4bcf557355c3fea84b5edead12b1fee47c4db27b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab1b97703352f65844ee143648270abb4f37171b22cf2725af4d12464772ce5c\",\"dweb:/ipfs/QmT2n5kDg4Zfuvawq4C4huibrD9eRPzx7DmnnbccNGaJcG\"]},\"contracts/Staking_dApp/StakeBoredom.sol\":{\"keccak256\":\"0x7fb7009f870efa59065b0595ba39fa11c86eba51e8b4dabcba16c0b18a3b9dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1552bb43003f442bf8b159f86659d0f1fe803a9f7f8d178cf93eae4599ac096b\",\"dweb:/ipfs/QmU4sV6S3pkzgSzHFrfMcmc2sBmMTtGU4kA2kQEtKxzodS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 596,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 893,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_state",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(PoolState)482_storage"
							},
							{
								"astId": 895,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_totalStake",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 899,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 903,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 907,
								"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
								"label": "_balances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(PoolState)482_storage": {
								"encoding": "inplace",
								"label": "struct PoolManager.PoolState",
								"members": [
									{
										"astId": 471,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "periodFinish",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 473,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "rewardsDuration",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 475,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "lastUpdateTime",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 477,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "distributor",
										"offset": 0,
										"slot": "1",
										"type": "t_uint160"
									},
									{
										"astId": 479,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "rewardRate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 481,
										"contract": "contracts/Staking_dApp/StakeBoredom.sol:StakeBoredom",
										"label": "rewardPerTokenStored",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Staking_dApp/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1261:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1490:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1490:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1490:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1490:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1483:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1204:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1223:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:6:0"
									},
									"scope": 294,
									"src": "1195:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2527:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2554:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2546:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2546:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2546:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2546:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2571:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2546:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2579:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2538:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2673:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2643:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2643:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2665:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2643:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2624:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2704:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2687:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1529:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2465:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2491:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2475:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2510:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2502:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2527:0:0"
									},
									"scope": 294,
									"src": "2456:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3624:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3655:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3663:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3669:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3642:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3642:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3635:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2781:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3544:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3586:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3573:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3573:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3610:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:14:0"
									},
									"scope": 294,
									"src": "3535:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4091:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4148:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4109:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4109:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4102:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3718:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3949:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3980:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3972:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3997:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4039:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4025:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4025:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:97:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4077:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:14:0"
									},
									"scope": 294,
									"src": "3940:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4691:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4739:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4745:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4752:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4709:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4709:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4702:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4177:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4553:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4623:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4610:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4638:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:84:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4677:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4677:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4676:14:0"
									},
									"scope": 294,
									"src": "4544:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5244:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5271:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5263:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5263:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5263:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5263:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5288:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5263:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5295:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5255:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5255:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5255:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5366:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5355:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5347:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5347:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5426:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5421:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5448:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5435:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5488:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5462:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5462:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5462:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5462:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5420:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5549:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5511:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5511:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5504:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4812:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5069:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5139:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5126:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5162:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5154:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5192:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5178:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5090:121:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5230:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5229:14:0"
									},
									"scope": 294,
									"src": "5060:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5855:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5892:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5873:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5873:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5866:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5578:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5764:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5791:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5783:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5812:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5799:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5841:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5841:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5840:14:0"
									},
									"scope": 294,
									"src": "5755:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6308:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6338:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6327:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6327:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6347:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6319:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6319:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6319:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6405:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6400:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6400:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6427:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6414:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6459:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6441:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6399:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6520:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6482:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6482:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6475:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5962:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6155:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6192:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6222:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6209:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6251:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6237:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:97:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6294:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:14:0"
									},
									"scope": 294,
									"src": "6146:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6825:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6878:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6843:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6836:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6549:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6737:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6787:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6774:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6774:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6757:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6811:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6811:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:14:0"
									},
									"scope": 294,
									"src": "6728:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7281:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7311:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7300:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7300:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7320:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7292:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7292:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7380:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7375:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7402:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7389:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7389:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7436:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7416:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7416:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7374:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7485:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7497:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7459:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7459:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7452:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6936:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7131:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7170:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7162:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7187:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7187:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7229:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7215:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7215:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:97:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7267:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7267:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7266:14:0"
									},
									"scope": 294,
									"src": "7122:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7910:548:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7984:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "8070:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8070:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8090:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8070:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8385:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8411:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8404:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8404:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8404:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "8066:374:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "8093:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8216:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8239:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8268:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8262:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8262:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8243:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8312:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8316:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8308:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8308:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8329:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8301:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8301:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8301:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8268:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8316:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8207:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7921:530:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7934:44:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7956:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7949:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7526:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7755:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7787:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7782:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7818:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7805:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7805:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7853:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7839:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7839:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7771:101:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7896:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7895:14:0"
									},
									"scope": 294,
									"src": "7746:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "187:8274:0",
							"usedErrors": []
						}
					],
					"src": "89:8372:0"
				},
				"id": 0
			},
			"contracts/Staking_dApp/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IERC20",
							"nameLocation": "205:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "339:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:1"
									},
									"scope": 378,
									"src": "293:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "495:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:1"
									},
									"scope": 378,
									"src": "436:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "512:69:1",
										"text": " @dev Returns the amount of decimals in the token"
									},
									"functionSelector": "313ce567",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "596:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "604:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "630:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:9:1"
									},
									"scope": 378,
									"src": "587:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "647:208:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "870:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "887:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "879:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:28:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "925:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "925:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:6:1"
									},
									"scope": 378,
									"src": "861:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "939:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1224:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1257:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1249:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:32:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1289:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:9:1"
									},
									"scope": 378,
									"src": "1215:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1306:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1976:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1992:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1984:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:33:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2035:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2035:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2034:6:1"
									},
									"scope": 378,
									"src": "1967:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "2049:295:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2359:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2390:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2382:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2413:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2405:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2434:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2426:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:76:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2466:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:6:1"
									},
									"scope": 378,
									"src": "2350:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2480:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 368,
									"name": "Transfer",
									"nameLocation": "2655:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2702:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2686:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2714:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2706:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:57:1"
									},
									"src": "2649:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "2729:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 377,
									"name": "Approval",
									"nameLocation": "2892:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2917:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2901:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2924:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2957:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2949:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:63:1"
									},
									"src": "2886:78:1"
								}
							],
							"scope": 379,
							"src": "195:2772:1",
							"usedErrors": []
						}
					],
					"src": "94:2873:1"
				},
				"id": 1
			},
			"contracts/Staking_dApp/Math.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/Math.sol",
					"exportedSymbols": {
						"Math": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "118:75:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "Math",
							"nameLocation": "203:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "349:40:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 391,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "367:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 392,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "372:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "367:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "380:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "367:14:2",
													"trueExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "376:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 397,
												"nodeType": "Return",
												"src": "360:21:2"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "215:61:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "291:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "303:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "295:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "314:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "306:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:22:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "340:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:9:2"
									},
									"scope": 466,
									"src": "282:107:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "532:39:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "550:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 410,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "554:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "550:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 413,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "562:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "550:13:2",
													"trueExpression": {
														"id": 412,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "558:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 415,
												"nodeType": "Return",
												"src": "543:20:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "397:62:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:22:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:9:2"
									},
									"scope": 466,
									"src": "465:106:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "761:85:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 427,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "818:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 428,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "822:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 430,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "817:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 431,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "828:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 432,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "832:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "828:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 434,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "837:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "827:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "817:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 438,
												"nodeType": "Return",
												"src": "810:28:2"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "579:105:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "699:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "715:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "707:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "726:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "718:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:22:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:9:2"
									},
									"scope": 466,
									"src": "690:156:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1124:126:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 450,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "1214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 451,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "1218:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1214:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 453,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 443,
																			"src": "1223:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 454,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "1227:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1223:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1232:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1223:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1240:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1223:18:2",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1236:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 461,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1222:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1214:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 463,
												"nodeType": "Return",
												"src": "1207:35:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "854:193:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1062:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1078:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1070:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1089:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1081:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:22:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1115:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:9:2"
									},
									"scope": 466,
									"src": "1053:197:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 467,
							"src": "195:1058:2",
							"usedErrors": []
						}
					],
					"src": "91:1162:2"
				},
				"id": 2
			},
			"contracts/Staking_dApp/PoolManager.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/PoolManager.sol",
					"exportedSymbols": {
						"Math": [
							466
						],
						"PoolManager": [
							585
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "contracts/Staking_dApp/Math.sol",
							"file": "./Math.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 467,
							"src": "62:20:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolManager",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585
							],
							"name": "PoolManager",
							"nameLocation": "94:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PoolManager.PoolState",
									"id": 482,
									"members": [
										{
											"constant": false,
											"id": 471,
											"mutability": "mutable",
											"name": "periodFinish",
											"nameLocation": "175:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "168:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 470,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "168:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 473,
											"mutability": "mutable",
											"name": "rewardsDuration",
											"nameLocation": "205:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "198:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 472,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "198:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 475,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "238:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "231:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 474,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "231:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 477,
											"mutability": "mutable",
											"name": "distributor",
											"nameLocation": "271:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "263:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 476,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "263:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 479,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "301:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "293:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 478,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 481,
											"mutability": "mutable",
											"name": "rewardPerTokenStored",
											"nameLocation": "330:20:3",
											"nodeType": "VariableDeclaration",
											"scope": 482,
											"src": "322:28:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 480,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolState",
									"nameLocation": "122:9:3",
									"nodeType": "StructDefinition",
									"scope": 585,
									"src": "115:243:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "462:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 492,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "489:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "489:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 494,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																	"typeString": "struct PoolManager.PoolState storage pointer"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "periodFinish",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 471,
															"src": "506:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 490,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "480:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$466_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "480:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 497,
												"nodeType": "Return",
												"src": "473:52:3"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "375:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "418:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "400:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
													"typeString": "struct PoolManager.PoolState"
												},
												"typeName": {
													"id": 484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 483,
														"name": "PoolState",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "400:9:3"
													},
													"referencedDeclaration": 482,
													"src": "400:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
														"typeString": "struct PoolManager.PoolState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:25:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "448:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:9:3"
									},
									"scope": 585,
									"src": "366:167:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "648:259:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 509,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "663:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "678:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "663:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "659:55:3",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 512,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "688:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "688:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 508,
													"id": 514,
													"nodeType": "Return",
													"src": "681:33:3"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 516,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "734:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "734:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 527,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 520,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "788:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 521,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "788:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 522,
																									"name": "state",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 502,
																									"src": "805:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																										"typeString": "struct PoolManager.PoolState storage pointer"
																									}
																								},
																								"id": 523,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "periodFinish",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 471,
																								"src": "805:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							],
																							"expression": {
																								"id": 518,
																								"name": "Math",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 466,
																								"src": "779:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Math_$466_$",
																									"typeString": "type(library Math)"
																								}
																							},
																							"id": 519,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "min",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 417,
																							"src": "779:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "779:45:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 525,
																							"name": "state",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 502,
																							"src": "827:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																								"typeString": "struct PoolManager.PoolState storage pointer"
																							}
																						},
																						"id": 526,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "lastUpdateTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 475,
																						"src": "827:20:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "779:68:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 528,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "778:70:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 529,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "851:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																					"typeString": "struct PoolManager.PoolState storage pointer"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardRate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 479,
																			"src": "851:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "778:89:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "870:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "778:96:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 534,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "877:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "778:110:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 536,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "763:136:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "734:165:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 538,
												"nodeType": "Return",
												"src": "727:172:3"
											}
										]
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "550:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "583:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "565:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
													"typeString": "struct PoolManager.PoolState"
												},
												"typeName": {
													"id": 501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 500,
														"name": "PoolState",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "565:9:3"
													},
													"referencedDeclaration": 482,
													"src": "565:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
														"typeString": "struct PoolManager.PoolState"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "598:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "590:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:46:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "634:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:9:3"
									},
									"scope": 585,
									"src": "541:366:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1007:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 548,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "1025:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardRate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 479,
														"src": "1025:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"id": 550,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "1044:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardsDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "1044:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1025:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "1018:47:3"
											}
										]
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "924:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "963:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "945:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
													"typeString": "struct PoolManager.PoolState"
												},
												"typeName": {
													"id": 542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 541,
														"name": "PoolState",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "945:9:3"
													},
													"referencedDeclaration": 482,
													"src": "945:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
														"typeString": "struct PoolManager.PoolState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:25:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "993:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:9:3"
									},
									"scope": 585,
									"src": "915:158:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "1158:150:3",
										"statements": [
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 563,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1169:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "1169:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 567,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "1213:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																	"typeString": "struct PoolManager.PoolState storage pointer"
																}
															},
															{
																"id": 568,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "1220:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																	"typeString": "struct PoolManager.PoolState storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 566,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1198:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (struct PoolManager.PoolState storage pointer,uint256) view returns (uint256)"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1198:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1169:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1169:58:3"
											},
											{
												"expression": {
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 572,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1238:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																"typeString": "struct PoolManager.PoolState storage pointer"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 475,
														"src": "1238:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 578,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "1293:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																			"typeString": "struct PoolManager.PoolState storage pointer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
																			"typeString": "struct PoolManager.PoolState storage pointer"
																		}
																	],
																	"id": 577,
																	"name": "lastTimeRewardApplicable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "1268:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct PoolManager.PoolState storage pointer) view returns (uint256)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1268:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1261:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 575,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1261:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1261:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1238:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "1238:62:3"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "1090:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1121:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1103:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
													"typeString": "struct PoolManager.PoolState"
												},
												"typeName": {
													"id": 557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 556,
														"name": "PoolState",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 482,
														"src": "1103:9:3"
													},
													"referencedDeclaration": 482,
													"src": "1103:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
														"typeString": "struct PoolManager.PoolState"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "1136:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1128:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:41:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:3"
									},
									"scope": 585,
									"src": "1081:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "86:1225:3",
							"usedErrors": []
						}
					],
					"src": "35:1276:3"
				},
				"id": 3
			},
			"contracts/Staking_dApp/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							650
						]
					},
					"id": 651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "142:765:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 650,
							"linearizedBaseContracts": [
								650
							],
							"name": "ReentrancyGuard",
							"nameLocation": "927:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 591,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1734:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1709:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 589,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1709:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 590,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1749:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 594,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1782:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1757:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1757:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1793:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 596,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1819:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1803:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1803:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1849:41:4",
										"statements": [
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1860:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 600,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1870:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1860:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1860:22:4"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:2:4"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:0:4"
									},
									"scope": 650,
									"src": "1835:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "2300:83:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 607,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2311:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "2311:21:4"
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "2343:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2355:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "2355:20:4"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1898:372:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 615,
									"name": "nonReentrant",
									"nameLocation": "2285:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:2:4"
									},
									"src": "2276:107:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2430:254:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "2525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 620,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "2536:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2525:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2517:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "2517:63:4"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2658:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 626,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2668:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2658:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "2658:18:4"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2400:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2419:2:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:0:4"
									},
									"scope": 650,
									"src": "2391:293:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "2730:175:4",
										"statements": [
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 633,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2875:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 634,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "2885:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2875:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "2875:22:4"
											}
										]
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2701:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:2:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2730:0:4"
									},
									"scope": 650,
									"src": "2692:213:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "3154:45:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3172:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 645,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3183:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3172:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 643,
												"id": 647,
												"nodeType": "Return",
												"src": "3165:26:4"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "2913:171:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3099:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3122:2:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3148:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3148:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:6:4"
									},
									"scope": 650,
									"src": "3090:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 651,
							"src": "909:2293:4",
							"usedErrors": []
						}
					],
					"src": "115:3087:4"
				},
				"id": 4
			},
			"contracts/Staking_dApp/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"IERC20": [
							378
						],
						"SafeERC20": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"absolutePath": "contracts/Staking_dApp/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 875,
							"sourceUnit": 379,
							"src": "130:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Staking_dApp/Address.sol",
							"file": "./Address.sol",
							"id": 654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 875,
							"sourceUnit": 295,
							"src": "154:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 655,
								"nodeType": "StructuredDocumentation",
								"src": "181:465:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "SafeERC20",
							"nameLocation": "656:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 658,
									"libraryName": {
										"id": 656,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "679:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "673:26:5",
									"typeName": {
										"id": 657,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "813:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "844:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 672,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 661,
																			"src": "874:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$378",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 327,
																		"src": "874:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "874:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 675,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "899:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "903:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 670,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "851:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "851:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 668,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "824:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "824:86:5"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "716:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "739:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 659,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "739:6:5"
													},
													"referencedDeclaration": 378,
													"src": "739:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "770:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "762:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "791:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "783:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:75:5"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "813:0:5"
									},
									"scope": 874,
									"src": "707:211:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1059:115:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1090:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 697,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "1120:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$378",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 359,
																		"src": "1120:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1120:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 700,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "1149:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 701,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "1155:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1159:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 695,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1097:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1097:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1097:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 693,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "1070:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "1070:96:5"
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "935:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "962:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "962:6:5"
													},
													"referencedDeclaration": 378,
													"src": "962:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "993:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "985:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1016:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1008:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:98:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:0:5"
									},
									"scope": 874,
									"src": "926:248:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "1553:506:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 719,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "1807:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1816:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1807:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 722,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1806:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 727,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1847:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$874",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$874",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1839:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 725,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1839:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1839:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 729,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "1854:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 723,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "1823:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$378",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 337,
																				"src": "1823:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1823:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1866:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1823:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1822:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1806:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1883:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1784:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:166:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "1784:166:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "1981:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 742,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "2011:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$378",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 347,
																		"src": "2011:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2011:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 745,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "2035:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2044:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 740,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1988:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1988:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 738,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "1961:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1961:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "1961:90:5"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1182:255:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1452:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "1474:6:5"
													},
													"referencedDeclaration": 378,
													"src": "1474:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1505:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1497:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1531:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1523:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:80:5"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:5"
									},
									"scope": 874,
									"src": "1443:616:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "2187:197:5",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2206:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "2198:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2198:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 767,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2245:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$874",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$874",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2237:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2237:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2237:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 769,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "2252:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 763,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "2221:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$378",
																	"typeString": "contract IERC20"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "2221:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2221:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 771,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "2263:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2198:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "2299:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 778,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "2329:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$378",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 347,
																		"src": "2329:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2329:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 781,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "2353:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 782,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "2362:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 776,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2306:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2306:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2306:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 774,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2279:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "2279:97:5"
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2076:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2115:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2108:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 753,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 752,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "2108:6:5"
													},
													"referencedDeclaration": 378,
													"src": "2108:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2139:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2131:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:80:5"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:5"
									},
									"scope": 874,
									"src": "2067:317:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "2512:377:5",
										"statements": [
											{
												"id": 833,
												"nodeType": "UncheckedBlock",
												"src": "2523:359:5",
												"statements": [
													{
														"assignments": [
															798
														],
														"declarations": [
															{
																"constant": false,
																"id": 798,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2556:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 833,
																"src": "2548:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 797,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2548:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 807,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 803,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2595:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$874",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$874",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2587:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 801,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2587:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2587:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 805,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "2602:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 799,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "2571:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$378",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 337,
																"src": "2571:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2571:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2548:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 809,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "2633:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 810,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "2649:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2633:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2656:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 808,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2625:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2625:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 814,
														"nodeType": "ExpressionStatement",
														"src": "2625:75:5"
													},
													{
														"assignments": [
															816
														],
														"declarations": [
															{
																"constant": false,
																"id": 816,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 833,
																"src": "2715:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 815,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 820,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 817,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2738:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 818,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "2753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 822,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "2793:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$378",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 825,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 790,
																					"src": "2823:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$378",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 347,
																				"src": "2823:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2823:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 828,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "2847:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 829,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "2856:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 823,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2800:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2800:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2800:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$378",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 821,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "2773:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 832,
														"nodeType": "ExpressionStatement",
														"src": "2773:97:5"
													}
												]
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2401:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2440:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 788,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "2433:6:5"
													},
													"referencedDeclaration": 378,
													"src": "2433:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2464:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2456:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2490:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2482:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:80:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:5"
									},
									"scope": 874,
									"src": "2392:497:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "3350:646:5",
										"statements": [
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3717:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "3704:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 844,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3704:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": {
													"arguments": [
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3758:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 848,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "3738:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$378",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$378",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3730:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3730:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3730:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "3730:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3704:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 855,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "3814:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3814:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3834:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3814:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "3810:179:5",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "3837:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 862,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "3911:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 864,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3924:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 863,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3924:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 865,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3923:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 860,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3900:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3900:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3900:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3932:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 859,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3892:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3892:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "3892:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2897:377:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3289:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3316:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3309:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 838,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 837,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "3309:6:5"
													},
													"referencedDeclaration": 378,
													"src": "3309:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3336:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "3323:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3323:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3308:33:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3350:0:5"
									},
									"scope": 874,
									"src": "3280:716:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 875,
							"src": "648:3351:5",
							"usedErrors": []
						}
					],
					"src": "103:3896:5"
				},
				"id": 5
			},
			"contracts/Staking_dApp/StakeBoredom.sol": {
				"ast": {
					"absolutePath": "contracts/Staking_dApp/StakeBoredom.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"IERC20": [
							378
						],
						"Math": [
							466
						],
						"PoolManager": [
							585
						],
						"ReentrancyGuard": [
							650
						],
						"SafeERC20": [
							874
						],
						"StakeBoredom": [
							1530
						]
					},
					"id": 1531,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "471:23:6"
						},
						{
							"absolutePath": "contracts/Staking_dApp/ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1531,
							"sourceUnit": 651,
							"src": "498:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Staking_dApp/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1531,
							"sourceUnit": 875,
							"src": "531:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Staking_dApp/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1531,
							"sourceUnit": 379,
							"src": "558:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Staking_dApp/PoolManager.sol",
							"file": "./PoolManager.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1531,
							"sourceUnit": 586,
							"src": "582:27:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 881,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "638:15:6"
									},
									"id": 882,
									"nodeType": "InheritanceSpecifier",
									"src": "638:15:6"
								}
							],
							"canonicalName": "StakeBoredom",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1530,
							"linearizedBaseContracts": [
								1530,
								650
							],
							"name": "StakeBoredom",
							"nameLocation": "622:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 886,
									"libraryName": {
										"id": 883,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "667:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "661:27:6",
									"typeName": {
										"id": 885,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 884,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 378,
											"src": "681:6:6"
										},
										"referencedDeclaration": 378,
										"src": "681:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$378",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 890,
									"libraryName": {
										"id": 887,
										"name": "PoolManager",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "700:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "694:44:6",
									"typeName": {
										"id": 889,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 888,
											"name": "PoolManager.PoolState",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 482,
											"src": "716:21:6"
										},
										"referencedDeclaration": 482,
										"src": "716:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
											"typeString": "struct PoolManager.PoolState"
										}
									}
								},
								{
									"constant": false,
									"id": 893,
									"mutability": "mutable",
									"name": "_state",
									"nameLocation": "776:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "746:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PoolState_$482_storage",
										"typeString": "struct PoolManager.PoolState"
									},
									"typeName": {
										"id": 892,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 891,
											"name": "PoolManager.PoolState",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 482,
											"src": "746:21:6"
										},
										"referencedDeclaration": 482,
										"src": "746:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PoolState_$482_storage_ptr",
											"typeString": "struct PoolManager.PoolState"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "_totalStake",
									"nameLocation": "807:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "791:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 894,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 899,
									"mutability": "mutable",
									"name": "_userRewardPerTokenPaid",
									"nameLocation": "862:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "825:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 898,
										"keyType": {
											"id": 896,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "834:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "825:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 897,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 903,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "929:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "892:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 902,
										"keyType": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "901:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "892:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 901,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "912:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "981:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "944:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 906,
										"keyType": {
											"id": 904,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "953:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "944:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 905,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "964:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 910,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "1023:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "999:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$378",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 909,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 908,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 378,
											"src": "999:6:6"
										},
										"referencedDeclaration": 378,
										"src": "999:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$378",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 913,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "1066:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1530,
									"src": "1042:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$378",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 912,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 911,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 378,
											"src": "1042:6:6"
										},
										"referencedDeclaration": 378,
										"src": "1042:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$378",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "1179:189:6",
										"statements": [
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 926,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "1190:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 927,
														"name": "stakingToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "1205:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"src": "1190:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1190:28:6"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 930,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "1229:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 931,
														"name": "rewardToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "1243:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"src": "1229:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1229:26:6"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 934,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1266:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardsDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "1266:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 937,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "1291:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1302:6:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "1291:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1266:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1266:42:6"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 942,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1319:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "distributor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "1319:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 947,
																"name": "distributor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "1348:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1340:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 945,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "1340:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1340:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1319:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "1319:41:6"
											}
										]
									},
									"id": 952,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "distributor",
												"nameLocation": "1106:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1098:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "stakingToken_",
												"nameLocation": "1126:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1119:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 916,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "1119:6:6"
													},
													"referencedDeclaration": 378,
													"src": "1119:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "rewardToken_",
												"nameLocation": "1148:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1141:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$378",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 919,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 378,
														"src": "1141:6:6"
													},
													"referencedDeclaration": 378,
													"src": "1141:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1169:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1162:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 922,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1162:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:81:6"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:6"
									},
									"scope": 1530,
									"src": "1086:282:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "1483:37:6",
										"statements": [
											{
												"expression": {
													"id": 957,
													"name": "_totalStake",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 895,
													"src": "1501:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 956,
												"id": 958,
												"nodeType": "Return",
												"src": "1494:18:6"
											}
										]
									},
									"functionSelector": "fe961f61",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAmountStaked",
									"nameLocation": "1426:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1443:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1469:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:9:6"
									},
									"scope": 1530,
									"src": "1417:103:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1601:44:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 967,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "1619:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "1629:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1619:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 970,
												"nodeType": "Return",
												"src": "1612:25:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1537:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1555:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1547:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:17:6"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1587:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:9:6"
									},
									"scope": 1530,
									"src": "1528:117:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1710:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 979,
																"name": "_state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "1736:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolState_$482_storage",
																	"typeString": "struct PoolManager.PoolState storage ref"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "distributor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 477,
															"src": "1736:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1728:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1728:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 982,
												"nodeType": "Return",
												"src": "1721:34:6"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1662:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1696:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:6"
									},
									"scope": 1530,
									"src": "1653:110:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "1844:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 989,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1862:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastTimeRewardApplicable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 499,
														"src": "1862:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer) view returns (uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 992,
												"nodeType": "Return",
												"src": "1855:40:6"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "1780:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1804:2:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1830:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:9:6"
									},
									"scope": 1530,
									"src": "1771:132:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "1974:60:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "_totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "2014:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 999,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1992:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardPerToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "1992:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer,uint256) view returns (uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 998,
												"id": 1003,
												"nodeType": "Return",
												"src": "1985:41:6"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1920:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:2:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1960:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:9:6"
									},
									"scope": 1530,
									"src": "1911:123:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "2111:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1010,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "2129:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getRewardForDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 555,
														"src": "2129:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer) view returns (uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1013,
												"nodeType": "Return",
												"src": "2122:36:6"
											}
										]
									},
									"functionSelector": "1c1f78eb",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "2051:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:2:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:9:6"
									},
									"scope": 1530,
									"src": "2042:124:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "2242:169:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1022,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "2260:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1024,
																"indexExpression": {
																	"id": 1023,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "2270:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2260:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1027,
																					"name": "_totalStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 895,
																					"src": "2318:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1025,
																					"name": "_state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 893,
																					"src": "2296:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolState_$482_storage",
																						"typeString": "struct PoolManager.PoolState storage ref"
																					}
																				},
																				"id": 1026,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rewardPerToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 540,
																				"src": "2296:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
																					"typeString": "function (struct PoolManager.PoolState storage pointer,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2296:34:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1029,
																				"name": "_userRewardPerTokenPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 899,
																				"src": "2333:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1031,
																			"indexExpression": {
																				"id": 1030,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1017,
																				"src": "2357:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2333:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2296:69:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2281:95:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2260:116:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "2260:123:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1037,
															"name": "_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2386:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1039,
														"indexExpression": {
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "2395:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2386:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2260:143:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1041,
												"nodeType": "Return",
												"src": "2253:150:6"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "2183:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2198:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "2190:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:17:6"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "2228:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:9:6"
									},
									"scope": 1530,
									"src": "2174:237:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "2555:262:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "2574:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2574:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652067726561746572207468616e207a65726f",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2586:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															},
															"value": "Must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2566:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "2566:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2657:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1068,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2677:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																],
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2669:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1066,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2669:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2669:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2684:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1061,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2627:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "2627:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "2627:64:6"
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "_totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "2702:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1074,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "2717:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "2702:21:6"
											},
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1077,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2734:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1080,
														"indexExpression": {
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2744:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2744:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2734:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1081,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "2759:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2734:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2790:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2790:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2802:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "2783:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "EmitStatement",
												"src": "2778:31:6"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1047,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 615,
												"src": "2512:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2512:12:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1050,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2538:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2538:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1487,
												"src": "2525:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2525:24:6"
										}
									],
									"name": "stake",
									"nameLocation": "2473:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2487:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2479:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:16:6"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:0:6"
									},
									"scope": 1530,
									"src": "2464:353:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "2917:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "2936:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2945:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2936:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652067726561746572207468616e207a65726f",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2948:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															},
															"value": "Must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2928:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2928:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2928:48:6"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1109,
														"name": "_totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "2989:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "3004:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2989:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2989:21:6"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1113,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3021:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1116,
														"indexExpression": {
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3031:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3031:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3021:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1117,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "3046:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3021:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "3021:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3089:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3089:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3101:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1120,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "3063:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 681,
														"src": "3063:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "3063:45:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3136:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3136:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3148:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "3126:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "EmitStatement",
												"src": "3121:34:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1095,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 615,
												"src": "2874:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2874:12:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1098,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2900:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2900:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1487,
												"src": "2887:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2887:24:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "2834:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2851:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:16:6"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2917:0:6"
									},
									"scope": 1530,
									"src": "2825:338:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "3250:246:6",
										"statements": [
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3269:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "3261:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3261:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"initialValue": {
													"baseExpression": {
														"id": 1146,
														"name": "_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3278:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1149,
													"indexExpression": {
														"expression": {
															"id": 1147,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3287:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3287:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3278:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3261:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1151,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3315:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3315:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "3311:178:6",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "3327:162:6",
													"statements": [
														{
															"expression": {
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1154,
																		"name": "_rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "3342:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1157,
																	"indexExpression": {
																		"expression": {
																			"id": 1155,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3351:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3351:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3342:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3342:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "3342:24:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1164,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3406:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3406:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1166,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "3418:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1161,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "3381:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$378",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "3381:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3381:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1168,
															"nodeType": "ExpressionStatement",
															"src": "3381:44:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1170,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3458:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3458:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1172,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "3470:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1169,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "3447:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3447:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "EmitStatement",
															"src": "3442:35:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1137,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 615,
												"src": "3207:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3207:12:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3233:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3233:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1139,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1487,
												"src": "3220:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3220:24:6"
										}
									],
									"name": "getReward",
									"nameLocation": "3180:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:2:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3250:0:6"
									},
									"scope": 1530,
									"src": "3171:325:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3542:742:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "_totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "3573:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1181,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "3553:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 584,
														"src": "3553:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3553:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "3553:32:6"
											},
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3606:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "3598:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3598:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"baseExpression": {
														"id": 1189,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3616:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1192,
													"indexExpression": {
														"expression": {
															"id": 1190,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3626:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3626:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3616:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3598:39:6"
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3656:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "3648:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3648:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1197,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3672:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3672:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1196,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "3665:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3648:35:6"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1201,
															"name": "_userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3696:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1204,
														"indexExpression": {
															"expression": {
																"id": 1202,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3720:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3720:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3696:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1205,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "3734:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardPerTokenStored",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "3734:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3696:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "3696:65:6"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1209,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3772:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1212,
														"indexExpression": {
															"expression": {
																"id": 1210,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3782:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3782:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3772:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1213,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3797:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3772:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "3772:32:6"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "3815:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"expression": {
																"id": 1217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3824:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3824:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3815:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3838:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3815:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3815:24:6"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "_totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "3850:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1224,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3865:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3850:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "3850:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "_totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "3905:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1227,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "3885:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 584,
														"src": "3885:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3885:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3885:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "3934:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1234,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "3950:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"src": "3934:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "4051:132:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4092:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4092:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "4104:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1247,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "4066:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$378",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "4066:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4066:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "4066:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1258,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4152:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4152:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1260,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "4164:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1255,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4127:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$378",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "4127:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4127:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1262,
															"nodeType": "ExpressionStatement",
															"src": "4127:44:6"
														}
													]
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "3930:253:6",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "3963:82:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1239,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4004:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4004:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1241,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "4016:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1242,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "4026:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4016:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1236,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "3978:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$378",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "3978:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "3978:55:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4210:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4210:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4222:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1265,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4200:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4200:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "4195:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1272,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4257:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4257:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "4269:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "4246:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4246:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "EmitStatement",
												"src": "4241:35:6"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "3513:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:2:6"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:0:6"
									},
									"scope": 1530,
									"src": "3504:780:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4421:138:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "newDistributor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "4440:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4466:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4458:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4458:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4458:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4440:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073657420746f207a65726f2061646472",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4470:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e6122e9cef92e29307ebf9a5791ef4c764e471047535c7b36898996c869dc49",
																"typeString": "literal_string \"Cannot set to zero addr\""
															},
															"value": "Cannot set to zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e6122e9cef92e29307ebf9a5791ef4c764e471047535c7b36898996c869dc49",
																"typeString": "literal_string \"Cannot set to zero addr\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4432:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4432:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "4432:64:6"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1295,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "distributor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4507:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1300,
																"name": "newDistributor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "4536:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4528:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1298,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "4528:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4528:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4507:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "4507:44:6"
											}
										]
									},
									"functionSelector": "75619ab5",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1282,
												"name": "onlyDistributor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1503,
												"src": "4400:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4400:15:6"
										}
									],
									"name": "setDistributor",
									"nameLocation": "4344:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "newDistributor",
												"nameLocation": "4367:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4359:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:24:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4421:0:6"
									},
									"scope": 1530,
									"src": "4335:224:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "4650:182:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "4669:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4678:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4669:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652067726561746572207468616e207a65726f",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															},
															"value": "Must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ef07dac73753c8fc01726e244f56d436c27aa01c8208306fbf3edaa2150a134",
																"typeString": "literal_string \"Must be greater than zero\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4661:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4661:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "4661:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4751:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4751:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1326,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4771:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4763:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4763:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4763:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1328,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "4778:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1319,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4722:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "4722:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$378_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$378_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4722:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "4722:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "4817:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1331,
														"name": "notifyRewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "4798:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "4798:26:6"
											}
										]
									},
									"functionSelector": "16c621e0",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1309,
												"name": "onlyDistributor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1503,
												"src": "4629:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4629:15:6"
										}
									],
									"name": "depositRewardTokens",
									"nameLocation": "4576:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4604:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4596:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:16:6"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4650:0:6"
									},
									"scope": 1530,
									"src": "4567:265:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "4945:803:6",
										"statements": [
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "4964:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "4956:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4956:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"expression": {
														"id": 1351,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4975:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolState_$482_storage",
															"typeString": "struct PoolManager.PoolState storage ref"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardsDuration",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 473,
													"src": "4975:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4956:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1354,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5014:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5014:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1356,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5033:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "periodFinish",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 471,
														"src": "5033:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5014:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "5124:212:6",
													"statements": [
														{
															"assignments": [
																1369
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1369,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "5147:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1394,
																	"src": "5139:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1368,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5139:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1375,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1370,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "5159:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage",
																			"typeString": "struct PoolManager.PoolState storage ref"
																		}
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "periodFinish",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "5159:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1372,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5181:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5181:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5159:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5139:57:6"
														},
														{
															"assignments": [
																1377
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1377,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "5219:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1394,
																	"src": "5211:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1376,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5211:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1382,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1378,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "5230:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 1379,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "5242:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage",
																			"typeString": "struct PoolManager.PoolState storage ref"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardRate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "5242:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5230:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5211:48:6"
														},
														{
															"expression": {
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1383,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "5274:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage",
																			"typeString": "struct PoolManager.PoolState storage ref"
																		}
																	},
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardRate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "5274:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1386,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "5295:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1387,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1377,
																					"src": "5304:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5295:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1389,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5294:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1390,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "5316:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5294:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5274:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "5274:50:6"
														}
													]
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "5010:326:6",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "5054:64:6",
													"statements": [
														{
															"expression": {
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1359,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "5069:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage",
																			"typeString": "struct PoolManager.PoolState storage ref"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardRate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "5069:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1362,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "5089:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1363,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "5098:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5089:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5069:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1366,
															"nodeType": "ExpressionStatement",
															"src": "5069:37:6"
														}
													]
												}
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5356:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5348:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5348:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1405,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1402,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5396:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeBoredom_$1530",
																		"typeString": "contract StakeBoredom"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5388:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5388:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5388:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1398,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5366:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$378",
																"typeString": "contract IERC20"
															}
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "5366:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5348:54:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$378",
														"typeString": "contract IERC20"
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1406,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "5419:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1407,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "5434:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$378",
															"typeString": "contract IERC20"
														}
													},
													"src": "5419:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5415:82:6",
												"trueBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "5448:49:6",
													"statements": [
														{
															"expression": {
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1409,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "5463:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1410,
																	"name": "_totalStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "5474:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5463:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "5463:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1416,
																	"name": "_state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "5517:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolState_$482_storage",
																		"typeString": "struct PoolManager.PoolState storage ref"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardRate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 479,
																"src": "5517:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "5538:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1419,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "5548:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5538:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5517:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420746f6f2068696768",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5558:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																"typeString": "literal_string \"Reward too high\""
															},
															"value": "Reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																"typeString": "literal_string \"Reward too high\""
															}
														],
														"id": 1415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5509:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5509:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "5509:67:6"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1425,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5589:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 475,
														"src": "5589:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1430,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5620:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5620:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5613:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1428,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "5613:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5613:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5589:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "5589:47:6"
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1435,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5647:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "periodFinish",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 471,
														"src": "5647:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1440,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5676:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5676:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1442,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "5694:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5676:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5669:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1438,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "5669:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5669:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5647:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "5647:56:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1448,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "5733:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1447,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "5721:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5721:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "EmitStatement",
												"src": "5716:24:6"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4912:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4912:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4912:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1487,
												"src": "4899:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4899:24:6"
										},
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "onlyDistributor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1503,
												"src": "4924:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4924:15:6"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "4849:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4876:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4868:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:16:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4945:0:6"
									},
									"scope": 1530,
									"src": "4840:908:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "5840:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "_totalStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "5871:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1456,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5851:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolState_$482_storage",
																"typeString": "struct PoolManager.PoolState storage ref"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 584,
														"src": "5851:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PoolState_$482_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_PoolState_$482_storage_ptr_$",
															"typeString": "function (struct PoolManager.PoolState storage pointer,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5851:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "5851:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1462,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "5900:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5919:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5911:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1463,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5911:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5911:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5900:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "5896:166:6",
												"trueBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "5923:139:6",
													"statements": [
														{
															"expression": {
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1468,
																		"name": "_rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "5938:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1470,
																	"indexExpression": {
																		"id": 1469,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "5947:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5938:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1472,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "5965:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1471,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "5958:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5958:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5938:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1475,
															"nodeType": "ExpressionStatement",
															"src": "5938:35:6"
														},
														{
															"expression": {
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1476,
																		"name": "_userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "5988:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1478,
																	"indexExpression": {
																		"id": 1477,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "6012:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5988:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1479,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "6023:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolState_$482_storage",
																			"typeString": "struct PoolManager.PoolState storage ref"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardPerTokenStored",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "6023:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5988:62:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1482,
															"nodeType": "ExpressionStatement",
															"src": "5988:62:6"
														}
													]
												}
											},
											{
												"id": 1485,
												"nodeType": "PlaceholderStatement",
												"src": "6072:1:6"
											}
										]
									},
									"id": 1487,
									"name": "updateReward",
									"nameLocation": "5810:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "5823:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5822:17:6"
									},
									"src": "5801:280:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "6293:100:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1490,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6312:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6312:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1494,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "6334:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolState_$482_storage",
																				"typeString": "struct PoolManager.PoolState storage ref"
																			}
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "distributor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 477,
																		"src": "6334:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6326:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6326:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6326:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6312:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206469737472696275746f72",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6355:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab",
																"typeString": "literal_string \"Not distributor\""
															},
															"value": "Not distributor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4a2b545f587c78dc5ce8311fb464f451160fcc0e5612ef5a33a48f618306ab",
																"typeString": "literal_string \"Not distributor\""
															}
														],
														"id": 1489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6304:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "6304:69:6"
											},
											{
												"id": 1501,
												"nodeType": "PlaceholderStatement",
												"src": "6384:1:6"
											}
										]
									},
									"id": 1503,
									"name": "onlyDistributor",
									"nameLocation": "6275:15:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6290:2:6"
									},
									"src": "6266:127:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 1507,
									"name": "RewardAdded",
									"nameLocation": "6449:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6469:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "6461:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6461:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6460:16:6"
									},
									"src": "6443:34:6"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 1513,
									"name": "Staked",
									"nameLocation": "6489:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6512:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "6496:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6526:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "6518:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:38:6"
									},
									"src": "6483:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1519,
									"name": "Withdrawn",
									"nameLocation": "6546:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6572:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6556:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6556:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6586:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6578:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6555:38:6"
									},
									"src": "6540:54:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 1525,
									"name": "RewardPaid",
									"nameLocation": "6606:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6633:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "6617:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6617:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6647:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "6639:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6616:38:6"
									},
									"src": "6600:55:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c0ebb188f905d128bcd7e4282dd1f9cf24cd331b69071002e488349aca6a867b",
									"id": 1529,
									"name": "DistributorUpdated",
									"nameLocation": "6667:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"indexed": true,
												"mutability": "mutable",
												"name": "newDistributor",
												"nameLocation": "6702:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "6686:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6685:32:6"
									},
									"src": "6661:57:6"
								}
							],
							"scope": 1531,
							"src": "613:6108:6",
							"usedErrors": []
						}
					],
					"src": "471:6250:6"
				},
				"id": 6
			}
		}
	}
}